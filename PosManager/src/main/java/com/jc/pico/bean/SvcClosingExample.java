package com.jc.pico.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SvcClosingExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    public SvcClosingExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andBrandIdIsNull() {
            addCriterion("BRAND_ID is null");
            return (Criteria) this;
        }

        public Criteria andBrandIdIsNotNull() {
            addCriterion("BRAND_ID is not null");
            return (Criteria) this;
        }

        public Criteria andBrandIdEqualTo(Long value) {
            addCriterion("BRAND_ID =", value, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdNotEqualTo(Long value) {
            addCriterion("BRAND_ID <>", value, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdGreaterThan(Long value) {
            addCriterion("BRAND_ID >", value, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdGreaterThanOrEqualTo(Long value) {
            addCriterion("BRAND_ID >=", value, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdLessThan(Long value) {
            addCriterion("BRAND_ID <", value, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdLessThanOrEqualTo(Long value) {
            addCriterion("BRAND_ID <=", value, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdIn(List<Long> values) {
            addCriterion("BRAND_ID in", values, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdNotIn(List<Long> values) {
            addCriterion("BRAND_ID not in", values, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdBetween(Long value1, Long value2) {
            addCriterion("BRAND_ID between", value1, value2, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdNotBetween(Long value1, Long value2) {
            addCriterion("BRAND_ID not between", value1, value2, "brandId");
            return (Criteria) this;
        }

        public Criteria andStoreIdIsNull() {
            addCriterion("STORE_ID is null");
            return (Criteria) this;
        }

        public Criteria andStoreIdIsNotNull() {
            addCriterion("STORE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andStoreIdEqualTo(Long value) {
            addCriterion("STORE_ID =", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdNotEqualTo(Long value) {
            addCriterion("STORE_ID <>", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdGreaterThan(Long value) {
            addCriterion("STORE_ID >", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdGreaterThanOrEqualTo(Long value) {
            addCriterion("STORE_ID >=", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdLessThan(Long value) {
            addCriterion("STORE_ID <", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdLessThanOrEqualTo(Long value) {
            addCriterion("STORE_ID <=", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdIn(List<Long> values) {
            addCriterion("STORE_ID in", values, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdNotIn(List<Long> values) {
            addCriterion("STORE_ID not in", values, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdBetween(Long value1, Long value2) {
            addCriterion("STORE_ID between", value1, value2, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdNotBetween(Long value1, Long value2) {
            addCriterion("STORE_ID not between", value1, value2, "storeId");
            return (Criteria) this;
        }

        public Criteria andOpenDtIsNull() {
            addCriterion("OPEN_DT is null");
            return (Criteria) this;
        }

        public Criteria andOpenDtIsNotNull() {
            addCriterion("OPEN_DT is not null");
            return (Criteria) this;
        }

        public Criteria andOpenDtEqualTo(Date value) {
            addCriterion("OPEN_DT =", value, "openDt");
            return (Criteria) this;
        }

        public Criteria andOpenDtNotEqualTo(Date value) {
            addCriterion("OPEN_DT <>", value, "openDt");
            return (Criteria) this;
        }

        public Criteria andOpenDtGreaterThan(Date value) {
            addCriterion("OPEN_DT >", value, "openDt");
            return (Criteria) this;
        }

        public Criteria andOpenDtGreaterThanOrEqualTo(Date value) {
            addCriterion("OPEN_DT >=", value, "openDt");
            return (Criteria) this;
        }

        public Criteria andOpenDtLessThan(Date value) {
            addCriterion("OPEN_DT <", value, "openDt");
            return (Criteria) this;
        }

        public Criteria andOpenDtLessThanOrEqualTo(Date value) {
            addCriterion("OPEN_DT <=", value, "openDt");
            return (Criteria) this;
        }

        public Criteria andOpenDtIn(List<Date> values) {
            addCriterion("OPEN_DT in", values, "openDt");
            return (Criteria) this;
        }

        public Criteria andOpenDtNotIn(List<Date> values) {
            addCriterion("OPEN_DT not in", values, "openDt");
            return (Criteria) this;
        }

        public Criteria andOpenDtBetween(Date value1, Date value2) {
            addCriterion("OPEN_DT between", value1, value2, "openDt");
            return (Criteria) this;
        }

        public Criteria andOpenDtNotBetween(Date value1, Date value2) {
            addCriterion("OPEN_DT not between", value1, value2, "openDt");
            return (Criteria) this;
        }

        public Criteria andOpenTmIsNull() {
            addCriterion("OPEN_TM is null");
            return (Criteria) this;
        }

        public Criteria andOpenTmIsNotNull() {
            addCriterion("OPEN_TM is not null");
            return (Criteria) this;
        }

        public Criteria andOpenTmEqualTo(Date value) {
            addCriterion("OPEN_TM =", value, "openTm");
            return (Criteria) this;
        }

        public Criteria andOpenTmNotEqualTo(Date value) {
            addCriterion("OPEN_TM <>", value, "openTm");
            return (Criteria) this;
        }

        public Criteria andOpenTmGreaterThan(Date value) {
            addCriterion("OPEN_TM >", value, "openTm");
            return (Criteria) this;
        }

        public Criteria andOpenTmGreaterThanOrEqualTo(Date value) {
            addCriterion("OPEN_TM >=", value, "openTm");
            return (Criteria) this;
        }

        public Criteria andOpenTmLessThan(Date value) {
            addCriterion("OPEN_TM <", value, "openTm");
            return (Criteria) this;
        }

        public Criteria andOpenTmLessThanOrEqualTo(Date value) {
            addCriterion("OPEN_TM <=", value, "openTm");
            return (Criteria) this;
        }

        public Criteria andOpenTmIn(List<Date> values) {
            addCriterion("OPEN_TM in", values, "openTm");
            return (Criteria) this;
        }

        public Criteria andOpenTmNotIn(List<Date> values) {
            addCriterion("OPEN_TM not in", values, "openTm");
            return (Criteria) this;
        }

        public Criteria andOpenTmBetween(Date value1, Date value2) {
            addCriterion("OPEN_TM between", value1, value2, "openTm");
            return (Criteria) this;
        }

        public Criteria andOpenTmNotBetween(Date value1, Date value2) {
            addCriterion("OPEN_TM not between", value1, value2, "openTm");
            return (Criteria) this;
        }

        public Criteria andCloseTmIsNull() {
            addCriterion("CLOSE_TM is null");
            return (Criteria) this;
        }

        public Criteria andCloseTmIsNotNull() {
            addCriterion("CLOSE_TM is not null");
            return (Criteria) this;
        }

        public Criteria andCloseTmEqualTo(Date value) {
            addCriterion("CLOSE_TM =", value, "closeTm");
            return (Criteria) this;
        }

        public Criteria andCloseTmNotEqualTo(Date value) {
            addCriterion("CLOSE_TM <>", value, "closeTm");
            return (Criteria) this;
        }

        public Criteria andCloseTmGreaterThan(Date value) {
            addCriterion("CLOSE_TM >", value, "closeTm");
            return (Criteria) this;
        }

        public Criteria andCloseTmGreaterThanOrEqualTo(Date value) {
            addCriterion("CLOSE_TM >=", value, "closeTm");
            return (Criteria) this;
        }

        public Criteria andCloseTmLessThan(Date value) {
            addCriterion("CLOSE_TM <", value, "closeTm");
            return (Criteria) this;
        }

        public Criteria andCloseTmLessThanOrEqualTo(Date value) {
            addCriterion("CLOSE_TM <=", value, "closeTm");
            return (Criteria) this;
        }

        public Criteria andCloseTmIn(List<Date> values) {
            addCriterion("CLOSE_TM in", values, "closeTm");
            return (Criteria) this;
        }

        public Criteria andCloseTmNotIn(List<Date> values) {
            addCriterion("CLOSE_TM not in", values, "closeTm");
            return (Criteria) this;
        }

        public Criteria andCloseTmBetween(Date value1, Date value2) {
            addCriterion("CLOSE_TM between", value1, value2, "closeTm");
            return (Criteria) this;
        }

        public Criteria andCloseTmNotBetween(Date value1, Date value2) {
            addCriterion("CLOSE_TM not between", value1, value2, "closeTm");
            return (Criteria) this;
        }

        public Criteria andIsClosingIsNull() {
            addCriterion("IS_CLOSING is null");
            return (Criteria) this;
        }

        public Criteria andIsClosingIsNotNull() {
            addCriterion("IS_CLOSING is not null");
            return (Criteria) this;
        }

        public Criteria andIsClosingEqualTo(Boolean value) {
            addCriterion("IS_CLOSING =", value, "isClosing");
            return (Criteria) this;
        }

        public Criteria andIsClosingNotEqualTo(Boolean value) {
            addCriterion("IS_CLOSING <>", value, "isClosing");
            return (Criteria) this;
        }

        public Criteria andIsClosingGreaterThan(Boolean value) {
            addCriterion("IS_CLOSING >", value, "isClosing");
            return (Criteria) this;
        }

        public Criteria andIsClosingGreaterThanOrEqualTo(Boolean value) {
            addCriterion("IS_CLOSING >=", value, "isClosing");
            return (Criteria) this;
        }

        public Criteria andIsClosingLessThan(Boolean value) {
            addCriterion("IS_CLOSING <", value, "isClosing");
            return (Criteria) this;
        }

        public Criteria andIsClosingLessThanOrEqualTo(Boolean value) {
            addCriterion("IS_CLOSING <=", value, "isClosing");
            return (Criteria) this;
        }

        public Criteria andIsClosingIn(List<Boolean> values) {
            addCriterion("IS_CLOSING in", values, "isClosing");
            return (Criteria) this;
        }

        public Criteria andIsClosingNotIn(List<Boolean> values) {
            addCriterion("IS_CLOSING not in", values, "isClosing");
            return (Criteria) this;
        }

        public Criteria andIsClosingBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_CLOSING between", value1, value2, "isClosing");
            return (Criteria) this;
        }

        public Criteria andIsClosingNotBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_CLOSING not between", value1, value2, "isClosing");
            return (Criteria) this;
        }

        public Criteria andOpenReserveIsNull() {
            addCriterion("OPEN_RESERVE is null");
            return (Criteria) this;
        }

        public Criteria andOpenReserveIsNotNull() {
            addCriterion("OPEN_RESERVE is not null");
            return (Criteria) this;
        }

        public Criteria andOpenReserveEqualTo(Double value) {
            addCriterion("OPEN_RESERVE =", value, "openReserve");
            return (Criteria) this;
        }

        public Criteria andOpenReserveNotEqualTo(Double value) {
            addCriterion("OPEN_RESERVE <>", value, "openReserve");
            return (Criteria) this;
        }

        public Criteria andOpenReserveGreaterThan(Double value) {
            addCriterion("OPEN_RESERVE >", value, "openReserve");
            return (Criteria) this;
        }

        public Criteria andOpenReserveGreaterThanOrEqualTo(Double value) {
            addCriterion("OPEN_RESERVE >=", value, "openReserve");
            return (Criteria) this;
        }

        public Criteria andOpenReserveLessThan(Double value) {
            addCriterion("OPEN_RESERVE <", value, "openReserve");
            return (Criteria) this;
        }

        public Criteria andOpenReserveLessThanOrEqualTo(Double value) {
            addCriterion("OPEN_RESERVE <=", value, "openReserve");
            return (Criteria) this;
        }

        public Criteria andOpenReserveIn(List<Double> values) {
            addCriterion("OPEN_RESERVE in", values, "openReserve");
            return (Criteria) this;
        }

        public Criteria andOpenReserveNotIn(List<Double> values) {
            addCriterion("OPEN_RESERVE not in", values, "openReserve");
            return (Criteria) this;
        }

        public Criteria andOpenReserveBetween(Double value1, Double value2) {
            addCriterion("OPEN_RESERVE between", value1, value2, "openReserve");
            return (Criteria) this;
        }

        public Criteria andOpenReserveNotBetween(Double value1, Double value2) {
            addCriterion("OPEN_RESERVE not between", value1, value2, "openReserve");
            return (Criteria) this;
        }

        public Criteria andSalesIsNull() {
            addCriterion("SALES is null");
            return (Criteria) this;
        }

        public Criteria andSalesIsNotNull() {
            addCriterion("SALES is not null");
            return (Criteria) this;
        }

        public Criteria andSalesEqualTo(Double value) {
            addCriterion("SALES =", value, "sales");
            return (Criteria) this;
        }

        public Criteria andSalesNotEqualTo(Double value) {
            addCriterion("SALES <>", value, "sales");
            return (Criteria) this;
        }

        public Criteria andSalesGreaterThan(Double value) {
            addCriterion("SALES >", value, "sales");
            return (Criteria) this;
        }

        public Criteria andSalesGreaterThanOrEqualTo(Double value) {
            addCriterion("SALES >=", value, "sales");
            return (Criteria) this;
        }

        public Criteria andSalesLessThan(Double value) {
            addCriterion("SALES <", value, "sales");
            return (Criteria) this;
        }

        public Criteria andSalesLessThanOrEqualTo(Double value) {
            addCriterion("SALES <=", value, "sales");
            return (Criteria) this;
        }

        public Criteria andSalesIn(List<Double> values) {
            addCriterion("SALES in", values, "sales");
            return (Criteria) this;
        }

        public Criteria andSalesNotIn(List<Double> values) {
            addCriterion("SALES not in", values, "sales");
            return (Criteria) this;
        }

        public Criteria andSalesBetween(Double value1, Double value2) {
            addCriterion("SALES between", value1, value2, "sales");
            return (Criteria) this;
        }

        public Criteria andSalesNotBetween(Double value1, Double value2) {
            addCriterion("SALES not between", value1, value2, "sales");
            return (Criteria) this;
        }

        public Criteria andSalesCntIsNull() {
            addCriterion("SALES_CNT is null");
            return (Criteria) this;
        }

        public Criteria andSalesCntIsNotNull() {
            addCriterion("SALES_CNT is not null");
            return (Criteria) this;
        }

        public Criteria andSalesCntEqualTo(Integer value) {
            addCriterion("SALES_CNT =", value, "salesCnt");
            return (Criteria) this;
        }

        public Criteria andSalesCntNotEqualTo(Integer value) {
            addCriterion("SALES_CNT <>", value, "salesCnt");
            return (Criteria) this;
        }

        public Criteria andSalesCntGreaterThan(Integer value) {
            addCriterion("SALES_CNT >", value, "salesCnt");
            return (Criteria) this;
        }

        public Criteria andSalesCntGreaterThanOrEqualTo(Integer value) {
            addCriterion("SALES_CNT >=", value, "salesCnt");
            return (Criteria) this;
        }

        public Criteria andSalesCntLessThan(Integer value) {
            addCriterion("SALES_CNT <", value, "salesCnt");
            return (Criteria) this;
        }

        public Criteria andSalesCntLessThanOrEqualTo(Integer value) {
            addCriterion("SALES_CNT <=", value, "salesCnt");
            return (Criteria) this;
        }

        public Criteria andSalesCntIn(List<Integer> values) {
            addCriterion("SALES_CNT in", values, "salesCnt");
            return (Criteria) this;
        }

        public Criteria andSalesCntNotIn(List<Integer> values) {
            addCriterion("SALES_CNT not in", values, "salesCnt");
            return (Criteria) this;
        }

        public Criteria andSalesCntBetween(Integer value1, Integer value2) {
            addCriterion("SALES_CNT between", value1, value2, "salesCnt");
            return (Criteria) this;
        }

        public Criteria andSalesCntNotBetween(Integer value1, Integer value2) {
            addCriterion("SALES_CNT not between", value1, value2, "salesCnt");
            return (Criteria) this;
        }

        public Criteria andRefundIsNull() {
            addCriterion("REFUND is null");
            return (Criteria) this;
        }

        public Criteria andRefundIsNotNull() {
            addCriterion("REFUND is not null");
            return (Criteria) this;
        }

        public Criteria andRefundEqualTo(Double value) {
            addCriterion("REFUND =", value, "refund");
            return (Criteria) this;
        }

        public Criteria andRefundNotEqualTo(Double value) {
            addCriterion("REFUND <>", value, "refund");
            return (Criteria) this;
        }

        public Criteria andRefundGreaterThan(Double value) {
            addCriterion("REFUND >", value, "refund");
            return (Criteria) this;
        }

        public Criteria andRefundGreaterThanOrEqualTo(Double value) {
            addCriterion("REFUND >=", value, "refund");
            return (Criteria) this;
        }

        public Criteria andRefundLessThan(Double value) {
            addCriterion("REFUND <", value, "refund");
            return (Criteria) this;
        }

        public Criteria andRefundLessThanOrEqualTo(Double value) {
            addCriterion("REFUND <=", value, "refund");
            return (Criteria) this;
        }

        public Criteria andRefundIn(List<Double> values) {
            addCriterion("REFUND in", values, "refund");
            return (Criteria) this;
        }

        public Criteria andRefundNotIn(List<Double> values) {
            addCriterion("REFUND not in", values, "refund");
            return (Criteria) this;
        }

        public Criteria andRefundBetween(Double value1, Double value2) {
            addCriterion("REFUND between", value1, value2, "refund");
            return (Criteria) this;
        }

        public Criteria andRefundNotBetween(Double value1, Double value2) {
            addCriterion("REFUND not between", value1, value2, "refund");
            return (Criteria) this;
        }

        public Criteria andRefundCntIsNull() {
            addCriterion("REFUND_CNT is null");
            return (Criteria) this;
        }

        public Criteria andRefundCntIsNotNull() {
            addCriterion("REFUND_CNT is not null");
            return (Criteria) this;
        }

        public Criteria andRefundCntEqualTo(Integer value) {
            addCriterion("REFUND_CNT =", value, "refundCnt");
            return (Criteria) this;
        }

        public Criteria andRefundCntNotEqualTo(Integer value) {
            addCriterion("REFUND_CNT <>", value, "refundCnt");
            return (Criteria) this;
        }

        public Criteria andRefundCntGreaterThan(Integer value) {
            addCriterion("REFUND_CNT >", value, "refundCnt");
            return (Criteria) this;
        }

        public Criteria andRefundCntGreaterThanOrEqualTo(Integer value) {
            addCriterion("REFUND_CNT >=", value, "refundCnt");
            return (Criteria) this;
        }

        public Criteria andRefundCntLessThan(Integer value) {
            addCriterion("REFUND_CNT <", value, "refundCnt");
            return (Criteria) this;
        }

        public Criteria andRefundCntLessThanOrEqualTo(Integer value) {
            addCriterion("REFUND_CNT <=", value, "refundCnt");
            return (Criteria) this;
        }

        public Criteria andRefundCntIn(List<Integer> values) {
            addCriterion("REFUND_CNT in", values, "refundCnt");
            return (Criteria) this;
        }

        public Criteria andRefundCntNotIn(List<Integer> values) {
            addCriterion("REFUND_CNT not in", values, "refundCnt");
            return (Criteria) this;
        }

        public Criteria andRefundCntBetween(Integer value1, Integer value2) {
            addCriterion("REFUND_CNT between", value1, value2, "refundCnt");
            return (Criteria) this;
        }

        public Criteria andRefundCntNotBetween(Integer value1, Integer value2) {
            addCriterion("REFUND_CNT not between", value1, value2, "refundCnt");
            return (Criteria) this;
        }

        public Criteria andDiscountIsNull() {
            addCriterion("DISCOUNT is null");
            return (Criteria) this;
        }

        public Criteria andDiscountIsNotNull() {
            addCriterion("DISCOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andDiscountEqualTo(Double value) {
            addCriterion("DISCOUNT =", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountNotEqualTo(Double value) {
            addCriterion("DISCOUNT <>", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountGreaterThan(Double value) {
            addCriterion("DISCOUNT >", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountGreaterThanOrEqualTo(Double value) {
            addCriterion("DISCOUNT >=", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountLessThan(Double value) {
            addCriterion("DISCOUNT <", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountLessThanOrEqualTo(Double value) {
            addCriterion("DISCOUNT <=", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountIn(List<Double> values) {
            addCriterion("DISCOUNT in", values, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountNotIn(List<Double> values) {
            addCriterion("DISCOUNT not in", values, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountBetween(Double value1, Double value2) {
            addCriterion("DISCOUNT between", value1, value2, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountNotBetween(Double value1, Double value2) {
            addCriterion("DISCOUNT not between", value1, value2, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountCntIsNull() {
            addCriterion("DISCOUNT_CNT is null");
            return (Criteria) this;
        }

        public Criteria andDiscountCntIsNotNull() {
            addCriterion("DISCOUNT_CNT is not null");
            return (Criteria) this;
        }

        public Criteria andDiscountCntEqualTo(Integer value) {
            addCriterion("DISCOUNT_CNT =", value, "discountCnt");
            return (Criteria) this;
        }

        public Criteria andDiscountCntNotEqualTo(Integer value) {
            addCriterion("DISCOUNT_CNT <>", value, "discountCnt");
            return (Criteria) this;
        }

        public Criteria andDiscountCntGreaterThan(Integer value) {
            addCriterion("DISCOUNT_CNT >", value, "discountCnt");
            return (Criteria) this;
        }

        public Criteria andDiscountCntGreaterThanOrEqualTo(Integer value) {
            addCriterion("DISCOUNT_CNT >=", value, "discountCnt");
            return (Criteria) this;
        }

        public Criteria andDiscountCntLessThan(Integer value) {
            addCriterion("DISCOUNT_CNT <", value, "discountCnt");
            return (Criteria) this;
        }

        public Criteria andDiscountCntLessThanOrEqualTo(Integer value) {
            addCriterion("DISCOUNT_CNT <=", value, "discountCnt");
            return (Criteria) this;
        }

        public Criteria andDiscountCntIn(List<Integer> values) {
            addCriterion("DISCOUNT_CNT in", values, "discountCnt");
            return (Criteria) this;
        }

        public Criteria andDiscountCntNotIn(List<Integer> values) {
            addCriterion("DISCOUNT_CNT not in", values, "discountCnt");
            return (Criteria) this;
        }

        public Criteria andDiscountCntBetween(Integer value1, Integer value2) {
            addCriterion("DISCOUNT_CNT between", value1, value2, "discountCnt");
            return (Criteria) this;
        }

        public Criteria andDiscountCntNotBetween(Integer value1, Integer value2) {
            addCriterion("DISCOUNT_CNT not between", value1, value2, "discountCnt");
            return (Criteria) this;
        }

        public Criteria andCustomerCntIsNull() {
            addCriterion("CUSTOMER_CNT is null");
            return (Criteria) this;
        }

        public Criteria andCustomerCntIsNotNull() {
            addCriterion("CUSTOMER_CNT is not null");
            return (Criteria) this;
        }

        public Criteria andCustomerCntEqualTo(Integer value) {
            addCriterion("CUSTOMER_CNT =", value, "customerCnt");
            return (Criteria) this;
        }

        public Criteria andCustomerCntNotEqualTo(Integer value) {
            addCriterion("CUSTOMER_CNT <>", value, "customerCnt");
            return (Criteria) this;
        }

        public Criteria andCustomerCntGreaterThan(Integer value) {
            addCriterion("CUSTOMER_CNT >", value, "customerCnt");
            return (Criteria) this;
        }

        public Criteria andCustomerCntGreaterThanOrEqualTo(Integer value) {
            addCriterion("CUSTOMER_CNT >=", value, "customerCnt");
            return (Criteria) this;
        }

        public Criteria andCustomerCntLessThan(Integer value) {
            addCriterion("CUSTOMER_CNT <", value, "customerCnt");
            return (Criteria) this;
        }

        public Criteria andCustomerCntLessThanOrEqualTo(Integer value) {
            addCriterion("CUSTOMER_CNT <=", value, "customerCnt");
            return (Criteria) this;
        }

        public Criteria andCustomerCntIn(List<Integer> values) {
            addCriterion("CUSTOMER_CNT in", values, "customerCnt");
            return (Criteria) this;
        }

        public Criteria andCustomerCntNotIn(List<Integer> values) {
            addCriterion("CUSTOMER_CNT not in", values, "customerCnt");
            return (Criteria) this;
        }

        public Criteria andCustomerCntBetween(Integer value1, Integer value2) {
            addCriterion("CUSTOMER_CNT between", value1, value2, "customerCnt");
            return (Criteria) this;
        }

        public Criteria andCustomerCntNotBetween(Integer value1, Integer value2) {
            addCriterion("CUSTOMER_CNT not between", value1, value2, "customerCnt");
            return (Criteria) this;
        }

        public Criteria andCashInIsNull() {
            addCriterion("CASH_IN is null");
            return (Criteria) this;
        }

        public Criteria andCashInIsNotNull() {
            addCriterion("CASH_IN is not null");
            return (Criteria) this;
        }

        public Criteria andCashInEqualTo(Double value) {
            addCriterion("CASH_IN =", value, "cashIn");
            return (Criteria) this;
        }

        public Criteria andCashInNotEqualTo(Double value) {
            addCriterion("CASH_IN <>", value, "cashIn");
            return (Criteria) this;
        }

        public Criteria andCashInGreaterThan(Double value) {
            addCriterion("CASH_IN >", value, "cashIn");
            return (Criteria) this;
        }

        public Criteria andCashInGreaterThanOrEqualTo(Double value) {
            addCriterion("CASH_IN >=", value, "cashIn");
            return (Criteria) this;
        }

        public Criteria andCashInLessThan(Double value) {
            addCriterion("CASH_IN <", value, "cashIn");
            return (Criteria) this;
        }

        public Criteria andCashInLessThanOrEqualTo(Double value) {
            addCriterion("CASH_IN <=", value, "cashIn");
            return (Criteria) this;
        }

        public Criteria andCashInIn(List<Double> values) {
            addCriterion("CASH_IN in", values, "cashIn");
            return (Criteria) this;
        }

        public Criteria andCashInNotIn(List<Double> values) {
            addCriterion("CASH_IN not in", values, "cashIn");
            return (Criteria) this;
        }

        public Criteria andCashInBetween(Double value1, Double value2) {
            addCriterion("CASH_IN between", value1, value2, "cashIn");
            return (Criteria) this;
        }

        public Criteria andCashInNotBetween(Double value1, Double value2) {
            addCriterion("CASH_IN not between", value1, value2, "cashIn");
            return (Criteria) this;
        }

        public Criteria andCashInCntIsNull() {
            addCriterion("CASH_IN_CNT is null");
            return (Criteria) this;
        }

        public Criteria andCashInCntIsNotNull() {
            addCriterion("CASH_IN_CNT is not null");
            return (Criteria) this;
        }

        public Criteria andCashInCntEqualTo(Integer value) {
            addCriterion("CASH_IN_CNT =", value, "cashInCnt");
            return (Criteria) this;
        }

        public Criteria andCashInCntNotEqualTo(Integer value) {
            addCriterion("CASH_IN_CNT <>", value, "cashInCnt");
            return (Criteria) this;
        }

        public Criteria andCashInCntGreaterThan(Integer value) {
            addCriterion("CASH_IN_CNT >", value, "cashInCnt");
            return (Criteria) this;
        }

        public Criteria andCashInCntGreaterThanOrEqualTo(Integer value) {
            addCriterion("CASH_IN_CNT >=", value, "cashInCnt");
            return (Criteria) this;
        }

        public Criteria andCashInCntLessThan(Integer value) {
            addCriterion("CASH_IN_CNT <", value, "cashInCnt");
            return (Criteria) this;
        }

        public Criteria andCashInCntLessThanOrEqualTo(Integer value) {
            addCriterion("CASH_IN_CNT <=", value, "cashInCnt");
            return (Criteria) this;
        }

        public Criteria andCashInCntIn(List<Integer> values) {
            addCriterion("CASH_IN_CNT in", values, "cashInCnt");
            return (Criteria) this;
        }

        public Criteria andCashInCntNotIn(List<Integer> values) {
            addCriterion("CASH_IN_CNT not in", values, "cashInCnt");
            return (Criteria) this;
        }

        public Criteria andCashInCntBetween(Integer value1, Integer value2) {
            addCriterion("CASH_IN_CNT between", value1, value2, "cashInCnt");
            return (Criteria) this;
        }

        public Criteria andCashInCntNotBetween(Integer value1, Integer value2) {
            addCriterion("CASH_IN_CNT not between", value1, value2, "cashInCnt");
            return (Criteria) this;
        }

        public Criteria andCashOutIsNull() {
            addCriterion("CASH_OUT is null");
            return (Criteria) this;
        }

        public Criteria andCashOutIsNotNull() {
            addCriterion("CASH_OUT is not null");
            return (Criteria) this;
        }

        public Criteria andCashOutEqualTo(Double value) {
            addCriterion("CASH_OUT =", value, "cashOut");
            return (Criteria) this;
        }

        public Criteria andCashOutNotEqualTo(Double value) {
            addCriterion("CASH_OUT <>", value, "cashOut");
            return (Criteria) this;
        }

        public Criteria andCashOutGreaterThan(Double value) {
            addCriterion("CASH_OUT >", value, "cashOut");
            return (Criteria) this;
        }

        public Criteria andCashOutGreaterThanOrEqualTo(Double value) {
            addCriterion("CASH_OUT >=", value, "cashOut");
            return (Criteria) this;
        }

        public Criteria andCashOutLessThan(Double value) {
            addCriterion("CASH_OUT <", value, "cashOut");
            return (Criteria) this;
        }

        public Criteria andCashOutLessThanOrEqualTo(Double value) {
            addCriterion("CASH_OUT <=", value, "cashOut");
            return (Criteria) this;
        }

        public Criteria andCashOutIn(List<Double> values) {
            addCriterion("CASH_OUT in", values, "cashOut");
            return (Criteria) this;
        }

        public Criteria andCashOutNotIn(List<Double> values) {
            addCriterion("CASH_OUT not in", values, "cashOut");
            return (Criteria) this;
        }

        public Criteria andCashOutBetween(Double value1, Double value2) {
            addCriterion("CASH_OUT between", value1, value2, "cashOut");
            return (Criteria) this;
        }

        public Criteria andCashOutNotBetween(Double value1, Double value2) {
            addCriterion("CASH_OUT not between", value1, value2, "cashOut");
            return (Criteria) this;
        }

        public Criteria andCashOutCntIsNull() {
            addCriterion("CASH_OUT_CNT is null");
            return (Criteria) this;
        }

        public Criteria andCashOutCntIsNotNull() {
            addCriterion("CASH_OUT_CNT is not null");
            return (Criteria) this;
        }

        public Criteria andCashOutCntEqualTo(Integer value) {
            addCriterion("CASH_OUT_CNT =", value, "cashOutCnt");
            return (Criteria) this;
        }

        public Criteria andCashOutCntNotEqualTo(Integer value) {
            addCriterion("CASH_OUT_CNT <>", value, "cashOutCnt");
            return (Criteria) this;
        }

        public Criteria andCashOutCntGreaterThan(Integer value) {
            addCriterion("CASH_OUT_CNT >", value, "cashOutCnt");
            return (Criteria) this;
        }

        public Criteria andCashOutCntGreaterThanOrEqualTo(Integer value) {
            addCriterion("CASH_OUT_CNT >=", value, "cashOutCnt");
            return (Criteria) this;
        }

        public Criteria andCashOutCntLessThan(Integer value) {
            addCriterion("CASH_OUT_CNT <", value, "cashOutCnt");
            return (Criteria) this;
        }

        public Criteria andCashOutCntLessThanOrEqualTo(Integer value) {
            addCriterion("CASH_OUT_CNT <=", value, "cashOutCnt");
            return (Criteria) this;
        }

        public Criteria andCashOutCntIn(List<Integer> values) {
            addCriterion("CASH_OUT_CNT in", values, "cashOutCnt");
            return (Criteria) this;
        }

        public Criteria andCashOutCntNotIn(List<Integer> values) {
            addCriterion("CASH_OUT_CNT not in", values, "cashOutCnt");
            return (Criteria) this;
        }

        public Criteria andCashOutCntBetween(Integer value1, Integer value2) {
            addCriterion("CASH_OUT_CNT between", value1, value2, "cashOutCnt");
            return (Criteria) this;
        }

        public Criteria andCashOutCntNotBetween(Integer value1, Integer value2) {
            addCriterion("CASH_OUT_CNT not between", value1, value2, "cashOutCnt");
            return (Criteria) this;
        }

        public Criteria andCashOnHandIsNull() {
            addCriterion("CASH_ON_HAND is null");
            return (Criteria) this;
        }

        public Criteria andCashOnHandIsNotNull() {
            addCriterion("CASH_ON_HAND is not null");
            return (Criteria) this;
        }

        public Criteria andCashOnHandEqualTo(Double value) {
            addCriterion("CASH_ON_HAND =", value, "cashOnHand");
            return (Criteria) this;
        }

        public Criteria andCashOnHandNotEqualTo(Double value) {
            addCriterion("CASH_ON_HAND <>", value, "cashOnHand");
            return (Criteria) this;
        }

        public Criteria andCashOnHandGreaterThan(Double value) {
            addCriterion("CASH_ON_HAND >", value, "cashOnHand");
            return (Criteria) this;
        }

        public Criteria andCashOnHandGreaterThanOrEqualTo(Double value) {
            addCriterion("CASH_ON_HAND >=", value, "cashOnHand");
            return (Criteria) this;
        }

        public Criteria andCashOnHandLessThan(Double value) {
            addCriterion("CASH_ON_HAND <", value, "cashOnHand");
            return (Criteria) this;
        }

        public Criteria andCashOnHandLessThanOrEqualTo(Double value) {
            addCriterion("CASH_ON_HAND <=", value, "cashOnHand");
            return (Criteria) this;
        }

        public Criteria andCashOnHandIn(List<Double> values) {
            addCriterion("CASH_ON_HAND in", values, "cashOnHand");
            return (Criteria) this;
        }

        public Criteria andCashOnHandNotIn(List<Double> values) {
            addCriterion("CASH_ON_HAND not in", values, "cashOnHand");
            return (Criteria) this;
        }

        public Criteria andCashOnHandBetween(Double value1, Double value2) {
            addCriterion("CASH_ON_HAND between", value1, value2, "cashOnHand");
            return (Criteria) this;
        }

        public Criteria andCashOnHandNotBetween(Double value1, Double value2) {
            addCriterion("CASH_ON_HAND not between", value1, value2, "cashOnHand");
            return (Criteria) this;
        }

        public Criteria andCashLackIsNull() {
            addCriterion("CASH_LACK is null");
            return (Criteria) this;
        }

        public Criteria andCashLackIsNotNull() {
            addCriterion("CASH_LACK is not null");
            return (Criteria) this;
        }

        public Criteria andCashLackEqualTo(Double value) {
            addCriterion("CASH_LACK =", value, "cashLack");
            return (Criteria) this;
        }

        public Criteria andCashLackNotEqualTo(Double value) {
            addCriterion("CASH_LACK <>", value, "cashLack");
            return (Criteria) this;
        }

        public Criteria andCashLackGreaterThan(Double value) {
            addCriterion("CASH_LACK >", value, "cashLack");
            return (Criteria) this;
        }

        public Criteria andCashLackGreaterThanOrEqualTo(Double value) {
            addCriterion("CASH_LACK >=", value, "cashLack");
            return (Criteria) this;
        }

        public Criteria andCashLackLessThan(Double value) {
            addCriterion("CASH_LACK <", value, "cashLack");
            return (Criteria) this;
        }

        public Criteria andCashLackLessThanOrEqualTo(Double value) {
            addCriterion("CASH_LACK <=", value, "cashLack");
            return (Criteria) this;
        }

        public Criteria andCashLackIn(List<Double> values) {
            addCriterion("CASH_LACK in", values, "cashLack");
            return (Criteria) this;
        }

        public Criteria andCashLackNotIn(List<Double> values) {
            addCriterion("CASH_LACK not in", values, "cashLack");
            return (Criteria) this;
        }

        public Criteria andCashLackBetween(Double value1, Double value2) {
            addCriterion("CASH_LACK between", value1, value2, "cashLack");
            return (Criteria) this;
        }

        public Criteria andCashLackNotBetween(Double value1, Double value2) {
            addCriterion("CASH_LACK not between", value1, value2, "cashLack");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("CREATED is null");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("CREATED is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedEqualTo(Date value) {
            addCriterion("CREATED =", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotEqualTo(Date value) {
            addCriterion("CREATED <>", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThan(Date value) {
            addCriterion("CREATED >", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATED >=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThan(Date value) {
            addCriterion("CREATED <", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThanOrEqualTo(Date value) {
            addCriterion("CREATED <=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedIn(List<Date> values) {
            addCriterion("CREATED in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotIn(List<Date> values) {
            addCriterion("CREATED not in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedBetween(Date value1, Date value2) {
            addCriterion("CREATED between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotBetween(Date value1, Date value2) {
            addCriterion("CREATED not between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNull() {
            addCriterion("UPDATED is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNotNull() {
            addCriterion("UPDATED is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedEqualTo(Date value) {
            addCriterion("UPDATED =", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotEqualTo(Date value) {
            addCriterion("UPDATED <>", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThan(Date value) {
            addCriterion("UPDATED >", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThanOrEqualTo(Date value) {
            addCriterion("UPDATED >=", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThan(Date value) {
            addCriterion("UPDATED <", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThanOrEqualTo(Date value) {
            addCriterion("UPDATED <=", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedIn(List<Date> values) {
            addCriterion("UPDATED in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotIn(List<Date> values) {
            addCriterion("UPDATED not in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedBetween(Date value1, Date value2) {
            addCriterion("UPDATED between", value1, value2, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotBetween(Date value1, Date value2) {
            addCriterion("UPDATED not between", value1, value2, "updated");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_svc_closing
     *
     * @mbggenerated do_not_delete_during_merge Thu Aug 11 16:47:29 KST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_svc_closing
     *
     * @mbggenerated Thu Aug 11 16:47:29 KST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}