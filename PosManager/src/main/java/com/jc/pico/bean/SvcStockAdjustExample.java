package com.jc.pico.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SvcStockAdjustExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    public SvcStockAdjustExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andBrandIdIsNull() {
            addCriterion("BRAND_ID is null");
            return (Criteria) this;
        }

        public Criteria andBrandIdIsNotNull() {
            addCriterion("BRAND_ID is not null");
            return (Criteria) this;
        }

        public Criteria andBrandIdEqualTo(Long value) {
            addCriterion("BRAND_ID =", value, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdNotEqualTo(Long value) {
            addCriterion("BRAND_ID <>", value, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdGreaterThan(Long value) {
            addCriterion("BRAND_ID >", value, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdGreaterThanOrEqualTo(Long value) {
            addCriterion("BRAND_ID >=", value, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdLessThan(Long value) {
            addCriterion("BRAND_ID <", value, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdLessThanOrEqualTo(Long value) {
            addCriterion("BRAND_ID <=", value, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdIn(List<Long> values) {
            addCriterion("BRAND_ID in", values, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdNotIn(List<Long> values) {
            addCriterion("BRAND_ID not in", values, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdBetween(Long value1, Long value2) {
            addCriterion("BRAND_ID between", value1, value2, "brandId");
            return (Criteria) this;
        }

        public Criteria andBrandIdNotBetween(Long value1, Long value2) {
            addCriterion("BRAND_ID not between", value1, value2, "brandId");
            return (Criteria) this;
        }

        public Criteria andStoreIdIsNull() {
            addCriterion("STORE_ID is null");
            return (Criteria) this;
        }

        public Criteria andStoreIdIsNotNull() {
            addCriterion("STORE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andStoreIdEqualTo(Long value) {
            addCriterion("STORE_ID =", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdNotEqualTo(Long value) {
            addCriterion("STORE_ID <>", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdGreaterThan(Long value) {
            addCriterion("STORE_ID >", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdGreaterThanOrEqualTo(Long value) {
            addCriterion("STORE_ID >=", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdLessThan(Long value) {
            addCriterion("STORE_ID <", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdLessThanOrEqualTo(Long value) {
            addCriterion("STORE_ID <=", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdIn(List<Long> values) {
            addCriterion("STORE_ID in", values, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdNotIn(List<Long> values) {
            addCriterion("STORE_ID not in", values, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdBetween(Long value1, Long value2) {
            addCriterion("STORE_ID between", value1, value2, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdNotBetween(Long value1, Long value2) {
            addCriterion("STORE_ID not between", value1, value2, "storeId");
            return (Criteria) this;
        }

        public Criteria andItemIdIsNull() {
            addCriterion("ITEM_ID is null");
            return (Criteria) this;
        }

        public Criteria andItemIdIsNotNull() {
            addCriterion("ITEM_ID is not null");
            return (Criteria) this;
        }

        public Criteria andItemIdEqualTo(Long value) {
            addCriterion("ITEM_ID =", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdNotEqualTo(Long value) {
            addCriterion("ITEM_ID <>", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdGreaterThan(Long value) {
            addCriterion("ITEM_ID >", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ITEM_ID >=", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdLessThan(Long value) {
            addCriterion("ITEM_ID <", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdLessThanOrEqualTo(Long value) {
            addCriterion("ITEM_ID <=", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdIn(List<Long> values) {
            addCriterion("ITEM_ID in", values, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdNotIn(List<Long> values) {
            addCriterion("ITEM_ID not in", values, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdBetween(Long value1, Long value2) {
            addCriterion("ITEM_ID between", value1, value2, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdNotBetween(Long value1, Long value2) {
            addCriterion("ITEM_ID not between", value1, value2, "itemId");
            return (Criteria) this;
        }

        public Criteria andSafeCntIsNull() {
            addCriterion("SAFE_CNT is null");
            return (Criteria) this;
        }

        public Criteria andSafeCntIsNotNull() {
            addCriterion("SAFE_CNT is not null");
            return (Criteria) this;
        }

        public Criteria andSafeCntEqualTo(Integer value) {
            addCriterion("SAFE_CNT =", value, "safeCnt");
            return (Criteria) this;
        }

        public Criteria andSafeCntNotEqualTo(Integer value) {
            addCriterion("SAFE_CNT <>", value, "safeCnt");
            return (Criteria) this;
        }

        public Criteria andSafeCntGreaterThan(Integer value) {
            addCriterion("SAFE_CNT >", value, "safeCnt");
            return (Criteria) this;
        }

        public Criteria andSafeCntGreaterThanOrEqualTo(Integer value) {
            addCriterion("SAFE_CNT >=", value, "safeCnt");
            return (Criteria) this;
        }

        public Criteria andSafeCntLessThan(Integer value) {
            addCriterion("SAFE_CNT <", value, "safeCnt");
            return (Criteria) this;
        }

        public Criteria andSafeCntLessThanOrEqualTo(Integer value) {
            addCriterion("SAFE_CNT <=", value, "safeCnt");
            return (Criteria) this;
        }

        public Criteria andSafeCntIn(List<Integer> values) {
            addCriterion("SAFE_CNT in", values, "safeCnt");
            return (Criteria) this;
        }

        public Criteria andSafeCntNotIn(List<Integer> values) {
            addCriterion("SAFE_CNT not in", values, "safeCnt");
            return (Criteria) this;
        }

        public Criteria andSafeCntBetween(Integer value1, Integer value2) {
            addCriterion("SAFE_CNT between", value1, value2, "safeCnt");
            return (Criteria) this;
        }

        public Criteria andSafeCntNotBetween(Integer value1, Integer value2) {
            addCriterion("SAFE_CNT not between", value1, value2, "safeCnt");
            return (Criteria) this;
        }

        public Criteria andCurrentCntIsNull() {
            addCriterion("CURRENT_CNT is null");
            return (Criteria) this;
        }

        public Criteria andCurrentCntIsNotNull() {
            addCriterion("CURRENT_CNT is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentCntEqualTo(Integer value) {
            addCriterion("CURRENT_CNT =", value, "currentCnt");
            return (Criteria) this;
        }

        public Criteria andCurrentCntNotEqualTo(Integer value) {
            addCriterion("CURRENT_CNT <>", value, "currentCnt");
            return (Criteria) this;
        }

        public Criteria andCurrentCntGreaterThan(Integer value) {
            addCriterion("CURRENT_CNT >", value, "currentCnt");
            return (Criteria) this;
        }

        public Criteria andCurrentCntGreaterThanOrEqualTo(Integer value) {
            addCriterion("CURRENT_CNT >=", value, "currentCnt");
            return (Criteria) this;
        }

        public Criteria andCurrentCntLessThan(Integer value) {
            addCriterion("CURRENT_CNT <", value, "currentCnt");
            return (Criteria) this;
        }

        public Criteria andCurrentCntLessThanOrEqualTo(Integer value) {
            addCriterion("CURRENT_CNT <=", value, "currentCnt");
            return (Criteria) this;
        }

        public Criteria andCurrentCntIn(List<Integer> values) {
            addCriterion("CURRENT_CNT in", values, "currentCnt");
            return (Criteria) this;
        }

        public Criteria andCurrentCntNotIn(List<Integer> values) {
            addCriterion("CURRENT_CNT not in", values, "currentCnt");
            return (Criteria) this;
        }

        public Criteria andCurrentCntBetween(Integer value1, Integer value2) {
            addCriterion("CURRENT_CNT between", value1, value2, "currentCnt");
            return (Criteria) this;
        }

        public Criteria andCurrentCntNotBetween(Integer value1, Integer value2) {
            addCriterion("CURRENT_CNT not between", value1, value2, "currentCnt");
            return (Criteria) this;
        }

        public Criteria andActualCntIsNull() {
            addCriterion("ACTUAL_CNT is null");
            return (Criteria) this;
        }

        public Criteria andActualCntIsNotNull() {
            addCriterion("ACTUAL_CNT is not null");
            return (Criteria) this;
        }

        public Criteria andActualCntEqualTo(Integer value) {
            addCriterion("ACTUAL_CNT =", value, "actualCnt");
            return (Criteria) this;
        }

        public Criteria andActualCntNotEqualTo(Integer value) {
            addCriterion("ACTUAL_CNT <>", value, "actualCnt");
            return (Criteria) this;
        }

        public Criteria andActualCntGreaterThan(Integer value) {
            addCriterion("ACTUAL_CNT >", value, "actualCnt");
            return (Criteria) this;
        }

        public Criteria andActualCntGreaterThanOrEqualTo(Integer value) {
            addCriterion("ACTUAL_CNT >=", value, "actualCnt");
            return (Criteria) this;
        }

        public Criteria andActualCntLessThan(Integer value) {
            addCriterion("ACTUAL_CNT <", value, "actualCnt");
            return (Criteria) this;
        }

        public Criteria andActualCntLessThanOrEqualTo(Integer value) {
            addCriterion("ACTUAL_CNT <=", value, "actualCnt");
            return (Criteria) this;
        }

        public Criteria andActualCntIn(List<Integer> values) {
            addCriterion("ACTUAL_CNT in", values, "actualCnt");
            return (Criteria) this;
        }

        public Criteria andActualCntNotIn(List<Integer> values) {
            addCriterion("ACTUAL_CNT not in", values, "actualCnt");
            return (Criteria) this;
        }

        public Criteria andActualCntBetween(Integer value1, Integer value2) {
            addCriterion("ACTUAL_CNT between", value1, value2, "actualCnt");
            return (Criteria) this;
        }

        public Criteria andActualCntNotBetween(Integer value1, Integer value2) {
            addCriterion("ACTUAL_CNT not between", value1, value2, "actualCnt");
            return (Criteria) this;
        }

        public Criteria andGapCntIsNull() {
            addCriterion("GAP_CNT is null");
            return (Criteria) this;
        }

        public Criteria andGapCntIsNotNull() {
            addCriterion("GAP_CNT is not null");
            return (Criteria) this;
        }

        public Criteria andGapCntEqualTo(Integer value) {
            addCriterion("GAP_CNT =", value, "gapCnt");
            return (Criteria) this;
        }

        public Criteria andGapCntNotEqualTo(Integer value) {
            addCriterion("GAP_CNT <>", value, "gapCnt");
            return (Criteria) this;
        }

        public Criteria andGapCntGreaterThan(Integer value) {
            addCriterion("GAP_CNT >", value, "gapCnt");
            return (Criteria) this;
        }

        public Criteria andGapCntGreaterThanOrEqualTo(Integer value) {
            addCriterion("GAP_CNT >=", value, "gapCnt");
            return (Criteria) this;
        }

        public Criteria andGapCntLessThan(Integer value) {
            addCriterion("GAP_CNT <", value, "gapCnt");
            return (Criteria) this;
        }

        public Criteria andGapCntLessThanOrEqualTo(Integer value) {
            addCriterion("GAP_CNT <=", value, "gapCnt");
            return (Criteria) this;
        }

        public Criteria andGapCntIn(List<Integer> values) {
            addCriterion("GAP_CNT in", values, "gapCnt");
            return (Criteria) this;
        }

        public Criteria andGapCntNotIn(List<Integer> values) {
            addCriterion("GAP_CNT not in", values, "gapCnt");
            return (Criteria) this;
        }

        public Criteria andGapCntBetween(Integer value1, Integer value2) {
            addCriterion("GAP_CNT between", value1, value2, "gapCnt");
            return (Criteria) this;
        }

        public Criteria andGapCntNotBetween(Integer value1, Integer value2) {
            addCriterion("GAP_CNT not between", value1, value2, "gapCnt");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("CREATED is null");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("CREATED is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedEqualTo(Date value) {
            addCriterion("CREATED =", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotEqualTo(Date value) {
            addCriterion("CREATED <>", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThan(Date value) {
            addCriterion("CREATED >", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATED >=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThan(Date value) {
            addCriterion("CREATED <", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThanOrEqualTo(Date value) {
            addCriterion("CREATED <=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedIn(List<Date> values) {
            addCriterion("CREATED in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotIn(List<Date> values) {
            addCriterion("CREATED not in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedBetween(Date value1, Date value2) {
            addCriterion("CREATED between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotBetween(Date value1, Date value2) {
            addCriterion("CREATED not between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNull() {
            addCriterion("UPDATED is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNotNull() {
            addCriterion("UPDATED is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedEqualTo(Date value) {
            addCriterion("UPDATED =", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotEqualTo(Date value) {
            addCriterion("UPDATED <>", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThan(Date value) {
            addCriterion("UPDATED >", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThanOrEqualTo(Date value) {
            addCriterion("UPDATED >=", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThan(Date value) {
            addCriterion("UPDATED <", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThanOrEqualTo(Date value) {
            addCriterion("UPDATED <=", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedIn(List<Date> values) {
            addCriterion("UPDATED in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotIn(List<Date> values) {
            addCriterion("UPDATED not in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedBetween(Date value1, Date value2) {
            addCriterion("UPDATED between", value1, value2, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotBetween(Date value1, Date value2) {
            addCriterion("UPDATED not between", value1, value2, "updated");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated do_not_delete_during_merge Thu Dec 01 15:37:25 KST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_svc_stock_adjust
     *
     * @mbggenerated Thu Dec 01 15:37:25 KST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}