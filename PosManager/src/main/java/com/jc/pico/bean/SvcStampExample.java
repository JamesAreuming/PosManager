package com.jc.pico.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SvcStampExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	public SvcStampExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andBrandIdIsNull() {
			addCriterion("BRAND_ID is null");
			return (Criteria) this;
		}

		public Criteria andBrandIdIsNotNull() {
			addCriterion("BRAND_ID is not null");
			return (Criteria) this;
		}

		public Criteria andBrandIdEqualTo(Integer value) {
			addCriterion("BRAND_ID =", value, "brandId");
			return (Criteria) this;
		}

		public Criteria andBrandIdNotEqualTo(Integer value) {
			addCriterion("BRAND_ID <>", value, "brandId");
			return (Criteria) this;
		}

		public Criteria andBrandIdGreaterThan(Integer value) {
			addCriterion("BRAND_ID >", value, "brandId");
			return (Criteria) this;
		}

		public Criteria andBrandIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("BRAND_ID >=", value, "brandId");
			return (Criteria) this;
		}

		public Criteria andBrandIdLessThan(Integer value) {
			addCriterion("BRAND_ID <", value, "brandId");
			return (Criteria) this;
		}

		public Criteria andBrandIdLessThanOrEqualTo(Integer value) {
			addCriterion("BRAND_ID <=", value, "brandId");
			return (Criteria) this;
		}

		public Criteria andBrandIdIn(List<Integer> values) {
			addCriterion("BRAND_ID in", values, "brandId");
			return (Criteria) this;
		}

		public Criteria andBrandIdNotIn(List<Integer> values) {
			addCriterion("BRAND_ID not in", values, "brandId");
			return (Criteria) this;
		}

		public Criteria andBrandIdBetween(Integer value1, Integer value2) {
			addCriterion("BRAND_ID between", value1, value2, "brandId");
			return (Criteria) this;
		}

		public Criteria andBrandIdNotBetween(Integer value1, Integer value2) {
			addCriterion("BRAND_ID not between", value1, value2, "brandId");
			return (Criteria) this;
		}

		public Criteria andStoreIdIsNull() {
			addCriterion("STORE_ID is null");
			return (Criteria) this;
		}

		public Criteria andStoreIdIsNotNull() {
			addCriterion("STORE_ID is not null");
			return (Criteria) this;
		}

		public Criteria andStoreIdEqualTo(Integer value) {
			addCriterion("STORE_ID =", value, "storeId");
			return (Criteria) this;
		}

		public Criteria andStoreIdNotEqualTo(Integer value) {
			addCriterion("STORE_ID <>", value, "storeId");
			return (Criteria) this;
		}

		public Criteria andStoreIdGreaterThan(Integer value) {
			addCriterion("STORE_ID >", value, "storeId");
			return (Criteria) this;
		}

		public Criteria andStoreIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("STORE_ID >=", value, "storeId");
			return (Criteria) this;
		}

		public Criteria andStoreIdLessThan(Integer value) {
			addCriterion("STORE_ID <", value, "storeId");
			return (Criteria) this;
		}

		public Criteria andStoreIdLessThanOrEqualTo(Integer value) {
			addCriterion("STORE_ID <=", value, "storeId");
			return (Criteria) this;
		}

		public Criteria andStoreIdIn(List<Integer> values) {
			addCriterion("STORE_ID in", values, "storeId");
			return (Criteria) this;
		}

		public Criteria andStoreIdNotIn(List<Integer> values) {
			addCriterion("STORE_ID not in", values, "storeId");
			return (Criteria) this;
		}

		public Criteria andStoreIdBetween(Integer value1, Integer value2) {
			addCriterion("STORE_ID between", value1, value2, "storeId");
			return (Criteria) this;
		}

		public Criteria andStoreIdNotBetween(Integer value1, Integer value2) {
			addCriterion("STORE_ID not between", value1, value2, "storeId");
			return (Criteria) this;
		}

		public Criteria andTitleIsNull() {
			addCriterion("TITLE is null");
			return (Criteria) this;
		}

		public Criteria andTitleIsNotNull() {
			addCriterion("TITLE is not null");
			return (Criteria) this;
		}

		public Criteria andTitleEqualTo(String value) {
			addCriterion("TITLE =", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleNotEqualTo(String value) {
			addCriterion("TITLE <>", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleGreaterThan(String value) {
			addCriterion("TITLE >", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleGreaterThanOrEqualTo(String value) {
			addCriterion("TITLE >=", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleLessThan(String value) {
			addCriterion("TITLE <", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleLessThanOrEqualTo(String value) {
			addCriterion("TITLE <=", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleLike(String value) {
			addCriterion("TITLE like", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleNotLike(String value) {
			addCriterion("TITLE not like", value, "title");
			return (Criteria) this;
		}

		public Criteria andTitleIn(List<String> values) {
			addCriterion("TITLE in", values, "title");
			return (Criteria) this;
		}

		public Criteria andTitleNotIn(List<String> values) {
			addCriterion("TITLE not in", values, "title");
			return (Criteria) this;
		}

		public Criteria andTitleBetween(String value1, String value2) {
			addCriterion("TITLE between", value1, value2, "title");
			return (Criteria) this;
		}

		public Criteria andTitleNotBetween(String value1, String value2) {
			addCriterion("TITLE not between", value1, value2, "title");
			return (Criteria) this;
		}

		public Criteria andQtyIsNull() {
			addCriterion("QTY is null");
			return (Criteria) this;
		}

		public Criteria andQtyIsNotNull() {
			addCriterion("QTY is not null");
			return (Criteria) this;
		}

		public Criteria andQtyEqualTo(Integer value) {
			addCriterion("QTY =", value, "qty");
			return (Criteria) this;
		}

		public Criteria andQtyNotEqualTo(Integer value) {
			addCriterion("QTY <>", value, "qty");
			return (Criteria) this;
		}

		public Criteria andQtyGreaterThan(Integer value) {
			addCriterion("QTY >", value, "qty");
			return (Criteria) this;
		}

		public Criteria andQtyGreaterThanOrEqualTo(Integer value) {
			addCriterion("QTY >=", value, "qty");
			return (Criteria) this;
		}

		public Criteria andQtyLessThan(Integer value) {
			addCriterion("QTY <", value, "qty");
			return (Criteria) this;
		}

		public Criteria andQtyLessThanOrEqualTo(Integer value) {
			addCriterion("QTY <=", value, "qty");
			return (Criteria) this;
		}

		public Criteria andQtyIn(List<Integer> values) {
			addCriterion("QTY in", values, "qty");
			return (Criteria) this;
		}

		public Criteria andQtyNotIn(List<Integer> values) {
			addCriterion("QTY not in", values, "qty");
			return (Criteria) this;
		}

		public Criteria andQtyBetween(Integer value1, Integer value2) {
			addCriterion("QTY between", value1, value2, "qty");
			return (Criteria) this;
		}

		public Criteria andQtyNotBetween(Integer value1, Integer value2) {
			addCriterion("QTY not between", value1, value2, "qty");
			return (Criteria) this;
		}

		public Criteria andTypeIsNull() {
			addCriterion("`TYPE` is null");
			return (Criteria) this;
		}

		public Criteria andTypeIsNotNull() {
			addCriterion("`TYPE` is not null");
			return (Criteria) this;
		}

		public Criteria andTypeEqualTo(String value) {
			addCriterion("`TYPE` =", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotEqualTo(String value) {
			addCriterion("`TYPE` <>", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThan(String value) {
			addCriterion("`TYPE` >", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThanOrEqualTo(String value) {
			addCriterion("`TYPE` >=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThan(String value) {
			addCriterion("`TYPE` <", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThanOrEqualTo(String value) {
			addCriterion("`TYPE` <=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLike(String value) {
			addCriterion("`TYPE` like", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotLike(String value) {
			addCriterion("`TYPE` not like", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeIn(List<String> values) {
			addCriterion("`TYPE` in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotIn(List<String> values) {
			addCriterion("`TYPE` not in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeBetween(String value1, String value2) {
			addCriterion("`TYPE` between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotBetween(String value1, String value2) {
			addCriterion("`TYPE` not between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andUseYnIsNull() {
			addCriterion("USE_YN is null");
			return (Criteria) this;
		}

		public Criteria andUseYnIsNotNull() {
			addCriterion("USE_YN is not null");
			return (Criteria) this;
		}

		public Criteria andUseYnEqualTo(Boolean value) {
			addCriterion("USE_YN =", value, "useYn");
			return (Criteria) this;
		}

		public Criteria andUseYnNotEqualTo(Boolean value) {
			addCriterion("USE_YN <>", value, "useYn");
			return (Criteria) this;
		}

		public Criteria andUseYnGreaterThan(Boolean value) {
			addCriterion("USE_YN >", value, "useYn");
			return (Criteria) this;
		}

		public Criteria andUseYnGreaterThanOrEqualTo(Boolean value) {
			addCriterion("USE_YN >=", value, "useYn");
			return (Criteria) this;
		}

		public Criteria andUseYnLessThan(Boolean value) {
			addCriterion("USE_YN <", value, "useYn");
			return (Criteria) this;
		}

		public Criteria andUseYnLessThanOrEqualTo(Boolean value) {
			addCriterion("USE_YN <=", value, "useYn");
			return (Criteria) this;
		}

		public Criteria andUseYnIn(List<Boolean> values) {
			addCriterion("USE_YN in", values, "useYn");
			return (Criteria) this;
		}

		public Criteria andUseYnNotIn(List<Boolean> values) {
			addCriterion("USE_YN not in", values, "useYn");
			return (Criteria) this;
		}

		public Criteria andUseYnBetween(Boolean value1, Boolean value2) {
			addCriterion("USE_YN between", value1, value2, "useYn");
			return (Criteria) this;
		}

		public Criteria andUseYnNotBetween(Boolean value1, Boolean value2) {
			addCriterion("USE_YN not between", value1, value2, "useYn");
			return (Criteria) this;
		}

		public Criteria andStartDtIsNull() {
			addCriterion("START_DT is null");
			return (Criteria) this;
		}

		public Criteria andStartDtIsNotNull() {
			addCriterion("START_DT is not null");
			return (Criteria) this;
		}

		public Criteria andStartDtEqualTo(Date value) {
			addCriterion("START_DT =", value, "startDt");
			return (Criteria) this;
		}

		public Criteria andStartDtNotEqualTo(Date value) {
			addCriterion("START_DT <>", value, "startDt");
			return (Criteria) this;
		}

		public Criteria andStartDtGreaterThan(Date value) {
			addCriterion("START_DT >", value, "startDt");
			return (Criteria) this;
		}

		public Criteria andStartDtGreaterThanOrEqualTo(Date value) {
			addCriterion("START_DT >=", value, "startDt");
			return (Criteria) this;
		}

		public Criteria andStartDtLessThan(Date value) {
			addCriterion("START_DT <", value, "startDt");
			return (Criteria) this;
		}

		public Criteria andStartDtLessThanOrEqualTo(Date value) {
			addCriterion("START_DT <=", value, "startDt");
			return (Criteria) this;
		}

		public Criteria andStartDtIn(List<Date> values) {
			addCriterion("START_DT in", values, "startDt");
			return (Criteria) this;
		}

		public Criteria andStartDtNotIn(List<Date> values) {
			addCriterion("START_DT not in", values, "startDt");
			return (Criteria) this;
		}

		public Criteria andStartDtBetween(Date value1, Date value2) {
			addCriterion("START_DT between", value1, value2, "startDt");
			return (Criteria) this;
		}

		public Criteria andStartDtNotBetween(Date value1, Date value2) {
			addCriterion("START_DT not between", value1, value2, "startDt");
			return (Criteria) this;
		}

		public Criteria andEndDtIsNull() {
			addCriterion("END_DT is null");
			return (Criteria) this;
		}

		public Criteria andEndDtIsNotNull() {
			addCriterion("END_DT is not null");
			return (Criteria) this;
		}

		public Criteria andEndDtEqualTo(Date value) {
			addCriterion("END_DT =", value, "endDt");
			return (Criteria) this;
		}

		public Criteria andEndDtNotEqualTo(Date value) {
			addCriterion("END_DT <>", value, "endDt");
			return (Criteria) this;
		}

		public Criteria andEndDtGreaterThan(Date value) {
			addCriterion("END_DT >", value, "endDt");
			return (Criteria) this;
		}

		public Criteria andEndDtGreaterThanOrEqualTo(Date value) {
			addCriterion("END_DT >=", value, "endDt");
			return (Criteria) this;
		}

		public Criteria andEndDtLessThan(Date value) {
			addCriterion("END_DT <", value, "endDt");
			return (Criteria) this;
		}

		public Criteria andEndDtLessThanOrEqualTo(Date value) {
			addCriterion("END_DT <=", value, "endDt");
			return (Criteria) this;
		}

		public Criteria andEndDtIn(List<Date> values) {
			addCriterion("END_DT in", values, "endDt");
			return (Criteria) this;
		}

		public Criteria andEndDtNotIn(List<Date> values) {
			addCriterion("END_DT not in", values, "endDt");
			return (Criteria) this;
		}

		public Criteria andEndDtBetween(Date value1, Date value2) {
			addCriterion("END_DT between", value1, value2, "endDt");
			return (Criteria) this;
		}

		public Criteria andEndDtNotBetween(Date value1, Date value2) {
			addCriterion("END_DT not between", value1, value2, "endDt");
			return (Criteria) this;
		}

		public Criteria andLifeYIsNull() {
			addCriterion("LIFE_Y is null");
			return (Criteria) this;
		}

		public Criteria andLifeYIsNotNull() {
			addCriterion("LIFE_Y is not null");
			return (Criteria) this;
		}

		public Criteria andLifeYEqualTo(Integer value) {
			addCriterion("LIFE_Y =", value, "lifeY");
			return (Criteria) this;
		}

		public Criteria andLifeYNotEqualTo(Integer value) {
			addCriterion("LIFE_Y <>", value, "lifeY");
			return (Criteria) this;
		}

		public Criteria andLifeYGreaterThan(Integer value) {
			addCriterion("LIFE_Y >", value, "lifeY");
			return (Criteria) this;
		}

		public Criteria andLifeYGreaterThanOrEqualTo(Integer value) {
			addCriterion("LIFE_Y >=", value, "lifeY");
			return (Criteria) this;
		}

		public Criteria andLifeYLessThan(Integer value) {
			addCriterion("LIFE_Y <", value, "lifeY");
			return (Criteria) this;
		}

		public Criteria andLifeYLessThanOrEqualTo(Integer value) {
			addCriterion("LIFE_Y <=", value, "lifeY");
			return (Criteria) this;
		}

		public Criteria andLifeYIn(List<Integer> values) {
			addCriterion("LIFE_Y in", values, "lifeY");
			return (Criteria) this;
		}

		public Criteria andLifeYNotIn(List<Integer> values) {
			addCriterion("LIFE_Y not in", values, "lifeY");
			return (Criteria) this;
		}

		public Criteria andLifeYBetween(Integer value1, Integer value2) {
			addCriterion("LIFE_Y between", value1, value2, "lifeY");
			return (Criteria) this;
		}

		public Criteria andLifeYNotBetween(Integer value1, Integer value2) {
			addCriterion("LIFE_Y not between", value1, value2, "lifeY");
			return (Criteria) this;
		}

		public Criteria andLifeMIsNull() {
			addCriterion("LIFE_M is null");
			return (Criteria) this;
		}

		public Criteria andLifeMIsNotNull() {
			addCriterion("LIFE_M is not null");
			return (Criteria) this;
		}

		public Criteria andLifeMEqualTo(Integer value) {
			addCriterion("LIFE_M =", value, "lifeM");
			return (Criteria) this;
		}

		public Criteria andLifeMNotEqualTo(Integer value) {
			addCriterion("LIFE_M <>", value, "lifeM");
			return (Criteria) this;
		}

		public Criteria andLifeMGreaterThan(Integer value) {
			addCriterion("LIFE_M >", value, "lifeM");
			return (Criteria) this;
		}

		public Criteria andLifeMGreaterThanOrEqualTo(Integer value) {
			addCriterion("LIFE_M >=", value, "lifeM");
			return (Criteria) this;
		}

		public Criteria andLifeMLessThan(Integer value) {
			addCriterion("LIFE_M <", value, "lifeM");
			return (Criteria) this;
		}

		public Criteria andLifeMLessThanOrEqualTo(Integer value) {
			addCriterion("LIFE_M <=", value, "lifeM");
			return (Criteria) this;
		}

		public Criteria andLifeMIn(List<Integer> values) {
			addCriterion("LIFE_M in", values, "lifeM");
			return (Criteria) this;
		}

		public Criteria andLifeMNotIn(List<Integer> values) {
			addCriterion("LIFE_M not in", values, "lifeM");
			return (Criteria) this;
		}

		public Criteria andLifeMBetween(Integer value1, Integer value2) {
			addCriterion("LIFE_M between", value1, value2, "lifeM");
			return (Criteria) this;
		}

		public Criteria andLifeMNotBetween(Integer value1, Integer value2) {
			addCriterion("LIFE_M not between", value1, value2, "lifeM");
			return (Criteria) this;
		}

		public Criteria andLifeDIsNull() {
			addCriterion("LIFE_D is null");
			return (Criteria) this;
		}

		public Criteria andLifeDIsNotNull() {
			addCriterion("LIFE_D is not null");
			return (Criteria) this;
		}

		public Criteria andLifeDEqualTo(Integer value) {
			addCriterion("LIFE_D =", value, "lifeD");
			return (Criteria) this;
		}

		public Criteria andLifeDNotEqualTo(Integer value) {
			addCriterion("LIFE_D <>", value, "lifeD");
			return (Criteria) this;
		}

		public Criteria andLifeDGreaterThan(Integer value) {
			addCriterion("LIFE_D >", value, "lifeD");
			return (Criteria) this;
		}

		public Criteria andLifeDGreaterThanOrEqualTo(Integer value) {
			addCriterion("LIFE_D >=", value, "lifeD");
			return (Criteria) this;
		}

		public Criteria andLifeDLessThan(Integer value) {
			addCriterion("LIFE_D <", value, "lifeD");
			return (Criteria) this;
		}

		public Criteria andLifeDLessThanOrEqualTo(Integer value) {
			addCriterion("LIFE_D <=", value, "lifeD");
			return (Criteria) this;
		}

		public Criteria andLifeDIn(List<Integer> values) {
			addCriterion("LIFE_D in", values, "lifeD");
			return (Criteria) this;
		}

		public Criteria andLifeDNotIn(List<Integer> values) {
			addCriterion("LIFE_D not in", values, "lifeD");
			return (Criteria) this;
		}

		public Criteria andLifeDBetween(Integer value1, Integer value2) {
			addCriterion("LIFE_D between", value1, value2, "lifeD");
			return (Criteria) this;
		}

		public Criteria andLifeDNotBetween(Integer value1, Integer value2) {
			addCriterion("LIFE_D not between", value1, value2, "lifeD");
			return (Criteria) this;
		}

		public Criteria andClifeYIsNull() {
			addCriterion("CLIFE_Y is null");
			return (Criteria) this;
		}

		public Criteria andClifeYIsNotNull() {
			addCriterion("CLIFE_Y is not null");
			return (Criteria) this;
		}

		public Criteria andClifeYEqualTo(Integer value) {
			addCriterion("CLIFE_Y =", value, "clifeY");
			return (Criteria) this;
		}

		public Criteria andClifeYNotEqualTo(Integer value) {
			addCriterion("CLIFE_Y <>", value, "clifeY");
			return (Criteria) this;
		}

		public Criteria andClifeYGreaterThan(Integer value) {
			addCriterion("CLIFE_Y >", value, "clifeY");
			return (Criteria) this;
		}

		public Criteria andClifeYGreaterThanOrEqualTo(Integer value) {
			addCriterion("CLIFE_Y >=", value, "clifeY");
			return (Criteria) this;
		}

		public Criteria andClifeYLessThan(Integer value) {
			addCriterion("CLIFE_Y <", value, "clifeY");
			return (Criteria) this;
		}

		public Criteria andClifeYLessThanOrEqualTo(Integer value) {
			addCriterion("CLIFE_Y <=", value, "clifeY");
			return (Criteria) this;
		}

		public Criteria andClifeYIn(List<Integer> values) {
			addCriterion("CLIFE_Y in", values, "clifeY");
			return (Criteria) this;
		}

		public Criteria andClifeYNotIn(List<Integer> values) {
			addCriterion("CLIFE_Y not in", values, "clifeY");
			return (Criteria) this;
		}

		public Criteria andClifeYBetween(Integer value1, Integer value2) {
			addCriterion("CLIFE_Y between", value1, value2, "clifeY");
			return (Criteria) this;
		}

		public Criteria andClifeYNotBetween(Integer value1, Integer value2) {
			addCriterion("CLIFE_Y not between", value1, value2, "clifeY");
			return (Criteria) this;
		}

		public Criteria andClifeMIsNull() {
			addCriterion("CLIFE_M is null");
			return (Criteria) this;
		}

		public Criteria andClifeMIsNotNull() {
			addCriterion("CLIFE_M is not null");
			return (Criteria) this;
		}

		public Criteria andClifeMEqualTo(Integer value) {
			addCriterion("CLIFE_M =", value, "clifeM");
			return (Criteria) this;
		}

		public Criteria andClifeMNotEqualTo(Integer value) {
			addCriterion("CLIFE_M <>", value, "clifeM");
			return (Criteria) this;
		}

		public Criteria andClifeMGreaterThan(Integer value) {
			addCriterion("CLIFE_M >", value, "clifeM");
			return (Criteria) this;
		}

		public Criteria andClifeMGreaterThanOrEqualTo(Integer value) {
			addCriterion("CLIFE_M >=", value, "clifeM");
			return (Criteria) this;
		}

		public Criteria andClifeMLessThan(Integer value) {
			addCriterion("CLIFE_M <", value, "clifeM");
			return (Criteria) this;
		}

		public Criteria andClifeMLessThanOrEqualTo(Integer value) {
			addCriterion("CLIFE_M <=", value, "clifeM");
			return (Criteria) this;
		}

		public Criteria andClifeMIn(List<Integer> values) {
			addCriterion("CLIFE_M in", values, "clifeM");
			return (Criteria) this;
		}

		public Criteria andClifeMNotIn(List<Integer> values) {
			addCriterion("CLIFE_M not in", values, "clifeM");
			return (Criteria) this;
		}

		public Criteria andClifeMBetween(Integer value1, Integer value2) {
			addCriterion("CLIFE_M between", value1, value2, "clifeM");
			return (Criteria) this;
		}

		public Criteria andClifeMNotBetween(Integer value1, Integer value2) {
			addCriterion("CLIFE_M not between", value1, value2, "clifeM");
			return (Criteria) this;
		}

		public Criteria andClifeDIsNull() {
			addCriterion("CLIFE_D is null");
			return (Criteria) this;
		}

		public Criteria andClifeDIsNotNull() {
			addCriterion("CLIFE_D is not null");
			return (Criteria) this;
		}

		public Criteria andClifeDEqualTo(Integer value) {
			addCriterion("CLIFE_D =", value, "clifeD");
			return (Criteria) this;
		}

		public Criteria andClifeDNotEqualTo(Integer value) {
			addCriterion("CLIFE_D <>", value, "clifeD");
			return (Criteria) this;
		}

		public Criteria andClifeDGreaterThan(Integer value) {
			addCriterion("CLIFE_D >", value, "clifeD");
			return (Criteria) this;
		}

		public Criteria andClifeDGreaterThanOrEqualTo(Integer value) {
			addCriterion("CLIFE_D >=", value, "clifeD");
			return (Criteria) this;
		}

		public Criteria andClifeDLessThan(Integer value) {
			addCriterion("CLIFE_D <", value, "clifeD");
			return (Criteria) this;
		}

		public Criteria andClifeDLessThanOrEqualTo(Integer value) {
			addCriterion("CLIFE_D <=", value, "clifeD");
			return (Criteria) this;
		}

		public Criteria andClifeDIn(List<Integer> values) {
			addCriterion("CLIFE_D in", values, "clifeD");
			return (Criteria) this;
		}

		public Criteria andClifeDNotIn(List<Integer> values) {
			addCriterion("CLIFE_D not in", values, "clifeD");
			return (Criteria) this;
		}

		public Criteria andClifeDBetween(Integer value1, Integer value2) {
			addCriterion("CLIFE_D between", value1, value2, "clifeD");
			return (Criteria) this;
		}

		public Criteria andClifeDNotBetween(Integer value1, Integer value2) {
			addCriterion("CLIFE_D not between", value1, value2, "clifeD");
			return (Criteria) this;
		}

		public Criteria andCntIsNull() {
			addCriterion("CNT is null");
			return (Criteria) this;
		}

		public Criteria andCntIsNotNull() {
			addCriterion("CNT is not null");
			return (Criteria) this;
		}

		public Criteria andCntEqualTo(Integer value) {
			addCriterion("CNT =", value, "cnt");
			return (Criteria) this;
		}

		public Criteria andCntNotEqualTo(Integer value) {
			addCriterion("CNT <>", value, "cnt");
			return (Criteria) this;
		}

		public Criteria andCntGreaterThan(Integer value) {
			addCriterion("CNT >", value, "cnt");
			return (Criteria) this;
		}

		public Criteria andCntGreaterThanOrEqualTo(Integer value) {
			addCriterion("CNT >=", value, "cnt");
			return (Criteria) this;
		}

		public Criteria andCntLessThan(Integer value) {
			addCriterion("CNT <", value, "cnt");
			return (Criteria) this;
		}

		public Criteria andCntLessThanOrEqualTo(Integer value) {
			addCriterion("CNT <=", value, "cnt");
			return (Criteria) this;
		}

		public Criteria andCntIn(List<Integer> values) {
			addCriterion("CNT in", values, "cnt");
			return (Criteria) this;
		}

		public Criteria andCntNotIn(List<Integer> values) {
			addCriterion("CNT not in", values, "cnt");
			return (Criteria) this;
		}

		public Criteria andCntBetween(Integer value1, Integer value2) {
			addCriterion("CNT between", value1, value2, "cnt");
			return (Criteria) this;
		}

		public Criteria andCntNotBetween(Integer value1, Integer value2) {
			addCriterion("CNT not between", value1, value2, "cnt");
			return (Criteria) this;
		}

		public Criteria andCidIsNull() {
			addCriterion("CID is null");
			return (Criteria) this;
		}

		public Criteria andCidIsNotNull() {
			addCriterion("CID is not null");
			return (Criteria) this;
		}

		public Criteria andCidEqualTo(Integer value) {
			addCriterion("CID =", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidNotEqualTo(Integer value) {
			addCriterion("CID <>", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidGreaterThan(Integer value) {
			addCriterion("CID >", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidGreaterThanOrEqualTo(Integer value) {
			addCriterion("CID >=", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidLessThan(Integer value) {
			addCriterion("CID <", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidLessThanOrEqualTo(Integer value) {
			addCriterion("CID <=", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidIn(List<Integer> values) {
			addCriterion("CID in", values, "cid");
			return (Criteria) this;
		}

		public Criteria andCidNotIn(List<Integer> values) {
			addCriterion("CID not in", values, "cid");
			return (Criteria) this;
		}

		public Criteria andCidBetween(Integer value1, Integer value2) {
			addCriterion("CID between", value1, value2, "cid");
			return (Criteria) this;
		}

		public Criteria andCidNotBetween(Integer value1, Integer value2) {
			addCriterion("CID not between", value1, value2, "cid");
			return (Criteria) this;
		}

		public Criteria andCdtIsNull() {
			addCriterion("CDT is null");
			return (Criteria) this;
		}

		public Criteria andCdtIsNotNull() {
			addCriterion("CDT is not null");
			return (Criteria) this;
		}

		public Criteria andCdtEqualTo(Date value) {
			addCriterion("CDT =", value, "cdt");
			return (Criteria) this;
		}

		public Criteria andCdtNotEqualTo(Date value) {
			addCriterion("CDT <>", value, "cdt");
			return (Criteria) this;
		}

		public Criteria andCdtGreaterThan(Date value) {
			addCriterion("CDT >", value, "cdt");
			return (Criteria) this;
		}

		public Criteria andCdtGreaterThanOrEqualTo(Date value) {
			addCriterion("CDT >=", value, "cdt");
			return (Criteria) this;
		}

		public Criteria andCdtLessThan(Date value) {
			addCriterion("CDT <", value, "cdt");
			return (Criteria) this;
		}

		public Criteria andCdtLessThanOrEqualTo(Date value) {
			addCriterion("CDT <=", value, "cdt");
			return (Criteria) this;
		}

		public Criteria andCdtIn(List<Date> values) {
			addCriterion("CDT in", values, "cdt");
			return (Criteria) this;
		}

		public Criteria andCdtNotIn(List<Date> values) {
			addCriterion("CDT not in", values, "cdt");
			return (Criteria) this;
		}

		public Criteria andCdtBetween(Date value1, Date value2) {
			addCriterion("CDT between", value1, value2, "cdt");
			return (Criteria) this;
		}

		public Criteria andCdtNotBetween(Date value1, Date value2) {
			addCriterion("CDT not between", value1, value2, "cdt");
			return (Criteria) this;
		}

		public Criteria andMidIsNull() {
			addCriterion("MID is null");
			return (Criteria) this;
		}

		public Criteria andMidIsNotNull() {
			addCriterion("MID is not null");
			return (Criteria) this;
		}

		public Criteria andMidEqualTo(Integer value) {
			addCriterion("MID =", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidNotEqualTo(Integer value) {
			addCriterion("MID <>", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidGreaterThan(Integer value) {
			addCriterion("MID >", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidGreaterThanOrEqualTo(Integer value) {
			addCriterion("MID >=", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidLessThan(Integer value) {
			addCriterion("MID <", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidLessThanOrEqualTo(Integer value) {
			addCriterion("MID <=", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidIn(List<Integer> values) {
			addCriterion("MID in", values, "mid");
			return (Criteria) this;
		}

		public Criteria andMidNotIn(List<Integer> values) {
			addCriterion("MID not in", values, "mid");
			return (Criteria) this;
		}

		public Criteria andMidBetween(Integer value1, Integer value2) {
			addCriterion("MID between", value1, value2, "mid");
			return (Criteria) this;
		}

		public Criteria andMidNotBetween(Integer value1, Integer value2) {
			addCriterion("MID not between", value1, value2, "mid");
			return (Criteria) this;
		}

		public Criteria andMdtIsNull() {
			addCriterion("MDT is null");
			return (Criteria) this;
		}

		public Criteria andMdtIsNotNull() {
			addCriterion("MDT is not null");
			return (Criteria) this;
		}

		public Criteria andMdtEqualTo(Date value) {
			addCriterion("MDT =", value, "mdt");
			return (Criteria) this;
		}

		public Criteria andMdtNotEqualTo(Date value) {
			addCriterion("MDT <>", value, "mdt");
			return (Criteria) this;
		}

		public Criteria andMdtGreaterThan(Date value) {
			addCriterion("MDT >", value, "mdt");
			return (Criteria) this;
		}

		public Criteria andMdtGreaterThanOrEqualTo(Date value) {
			addCriterion("MDT >=", value, "mdt");
			return (Criteria) this;
		}

		public Criteria andMdtLessThan(Date value) {
			addCriterion("MDT <", value, "mdt");
			return (Criteria) this;
		}

		public Criteria andMdtLessThanOrEqualTo(Date value) {
			addCriterion("MDT <=", value, "mdt");
			return (Criteria) this;
		}

		public Criteria andMdtIn(List<Date> values) {
			addCriterion("MDT in", values, "mdt");
			return (Criteria) this;
		}

		public Criteria andMdtNotIn(List<Date> values) {
			addCriterion("MDT not in", values, "mdt");
			return (Criteria) this;
		}

		public Criteria andMdtBetween(Date value1, Date value2) {
			addCriterion("MDT between", value1, value2, "mdt");
			return (Criteria) this;
		}

		public Criteria andMdtNotBetween(Date value1, Date value2) {
			addCriterion("MDT not between", value1, value2, "mdt");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table TB_SVC_STAMP
	 * @mbggenerated  Fri May 20 15:37:02 KST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TB_SVC_STAMP
     *
     * @mbggenerated do_not_delete_during_merge Wed May 18 10:12:48 KST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}