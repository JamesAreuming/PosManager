<?xml version="1.0" encoding="UTF-8" ?><!--
  ~ Filename  : CustomManagementMapper.xml
  ~ Function  :
  ~ Comment   :
  ~ History  : 
  ~
  ~ Version  : 1.0
  ~ Author   : 
  -->

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jc.pico.utils.customMapper.admin.CustomManagementMapper">

  <resultMap id="EventListResultMap" type="java.util.LinkedHashMap">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="PLATFORM_ID" jdbcType="BIGINT" property="platformId" />
    <result column="NOTICE_TP" jdbcType="CHAR" property="noticeTp" />
    <result column="NOTICE_ST" jdbcType="CHAR" property="noticeSt" />
    <result column="NOTICE_ST_NM" jdbcType="CHAR" property="noticeStNm" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="CONTENT" jdbcType="VARCHAR" property="content" />
    <result column="EVENT_IMG_PATH" jdbcType="VARCHAR" property="eventImgPath" />
    <result column="OPEN" jdbcType="TIMESTAMP" property="open" />
    <result column="CLOSE" jdbcType="TIMESTAMP" property="close" />
    <result column="SHOW_IN_APP" jdbcType="BIT" property="showInApp" />
    <result column="SHOW_IN_BACK" jdbcType="BIT" property="showInBack" />
    <result column="CREATED" jdbcType="TIMESTAMP" property="created" />
    <result column="UPDATED" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>
  
  <sql id="Event_Column_List">
    ID, PLATFORM_ID, NOTICE_TP, NOTICE_ST,
    (SELECT TITLE FROM TB_BASE_BCODE WHERE BASE_CD = NOTICE_ST) AS NOTICE_ST_NM,
    TITLE, CONTENT, EVENT_IMG_PATH, `OPEN`, `CLOSE`, SHOW_IN_APP, 
    SHOW_IN_BACK, CREATED, UPDATED
  </sql>
  
  <sql id="getEventList_Where">
    <if test="noticeTp != null">
      AND NOTICE_TP = #{noticeTp}
    </if>
  </sql>
  
  <sql id="getEventList_Where_Search">
    <if test="id != null and id != ''">
      AND ID = #{id}
    </if>
    <if test="title != null and title != ''">
      AND TITLE LIKE CONCAT('%', #{title}, '%')
    </if>
  </sql>
  
  <select id="getEventList" parameterType="hashMap" resultMap="EventListResultMap">
    SELECT
      <include refid="Event_Column_List" />
    FROM TB_NOTICE
    WHERE 1=1
      <include refid="getEventList_Where" />
      <include refid="getEventList_Where_Search" />
    <if test="orderByClause != null">
      ORDER BY ${orderByClause}
    </if>
  </select>
  
  <select id="getCountEventList" parameterType="hashMap" resultType="int">
    SELECT
      COUNT(*) AS COUNT
    FROM TB_NOTICE
    WHERE 1=1
      <include refid="getEventList_Where" />
      <include refid="getEventList_Where_Search" />
  </select>
  
  <select id="getCountEventListTotal" parameterType="hashMap" resultType="int">
    SELECT
      COUNT(*) AS COUNT
    FROM TB_NOTICE
    WHERE 1=1
      <include refid="getEventList_Where" />
  </select>


  <resultMap id="ReviewListResultMap" type="java.util.LinkedHashMap" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="SERVICE_ID" property="serviceId" jdbcType="BIGINT" />
    <result column="BRAND_ID" property="brandId" jdbcType="BIGINT" />
    <result column="STORE_ID" property="storeId" jdbcType="BIGINT" />
    <result column="CREATED" property="created" jdbcType="VARCHAR" />
    <result column="CREATED_TIME" property="createdTime" jdbcType="VARCHAR" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="RATING" property="rating" jdbcType="SMALLINT" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
  </resultMap>

  <select id="getReviewList" parameterType="hashMap" resultMap="ReviewListResultMap">
    SELECT
      C.SERVICE_ID
      ,A.BRAND_ID
      ,A.STORE_ID
      ,A.ID
      ,LEFT(A.CREATED, 10) AS CREATED
      ,SUBSTR(A.CREATED, 12, 5) AS CREATED_TIME
      ,A.CONTENT
      ,A.RATING
      ,B.NAME
    FROM TB_SVC_STORE_REVIEW A
      LEFT OUTER JOIN TB_USER B ON B.ID = A.USER_ID
      LEFT OUTER JOIN TB_SVC_STORE C ON C.ID = A.STORE_ID
    WHERE 1=1
      <include refid="getReviewList_Where" />
      <include refid="getReviewList_Where_Search" />
    <if test="orderByClause != null">
      ORDER BY ${orderByClause}
    </if>
  </select>

  <select id="getCountReviewList" parameterType="hashMap" resultType="int">
    SELECT
      COUNT(*) AS COUNT
    FROM TB_SVC_STORE_REVIEW A
      LEFT OUTER JOIN TB_USER B ON B.ID = A.USER_ID
      LEFT OUTER JOIN TB_SVC_STORE C ON C.ID = A.STORE_ID
    WHERE 1=1
      <include refid="getReviewList_Where" />
      <include refid="getReviewList_Where_Search" />
  </select>

  <select id="getCountReviewListTotal" parameterType="hashMap" resultType="int">
    SELECT
      COUNT(*) AS COUNT
    FROM TB_SVC_STORE_REVIEW A
      LEFT OUTER JOIN TB_USER B ON B.ID = A.USER_ID
      LEFT OUTER JOIN TB_SVC_STORE C ON C.ID = A.STORE_ID
    WHERE 1=1
      <include refid="getReviewList_Where" />
  </select>

  <sql id="getReviewList_Where">
    <if test="serviceId != null">
      AND C.SERVICE_ID = #{serviceId}
    </if>
    <if test="tenantId != null">
      AND C.TENANT_ID = #{tenantId}
    </if>
  </sql>

  <sql id="getReviewList_Where_Search">
    <if test="begin != null">
      AND LEFT(A.CREATED, 10) >= #{begin}
    </if>
    <if test="end != null">
      AND LEFT(A.CREATED, 10) <![CDATA[ <= ]]> #{end}
    </if>
    <if test="content != null and content != ''">
      AND A.CONTENT LIKE CONCAT('%', #{content}, '%')
    </if>
  </sql>


  <resultMap id="AppVersionListResultMap" type="java.util.LinkedHashMap">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="SERVICE_ID" jdbcType="BIGINT" property="serviceId" />
    <result column="APP_TP" jdbcType="CHAR" property="appTp" />
    <result column="APP_TP_NAME" jdbcType="VARCHAR" property="appTpNm" />
    <result column="OS_TP" jdbcType="CHAR" property="osTp" />
    <result column="OS_TP_NAME" jdbcType="VARCHAR" property="osTpNm" />
    <result column="PROJECT_NAME" jdbcType="VARCHAR" property="projectName" />
    <result column="PACKAGE_NAME" jdbcType="VARCHAR" property="packageName" />
    <result column="VERSION" jdbcType="VARCHAR" property="version" />
    <result column="VERSION_CODE" jdbcType="BIGINT" property="versionCode" />
    <result column="APP_INFO" jdbcType="VARCHAR" property="appInfo" />
    <result column="UPDATE_INFO" jdbcType="VARCHAR" property="updateInfo" />
    <result column="IS_STRICT_UPDATE" jdbcType="BIT" property="isStrictUpdate" />
    <result column="USE_YN" jdbcType="BIT" property="useYn" />
    <result column="CREATED" jdbcType="TIMESTAMP" property="created" />
    <result column="UPDATED" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>
  
  <sql id="AppVersion_Column_List">
    ID, SERVICE_ID,
    APP_TP, (SELECT TITLE FROM TB_BASE_BCODE WHERE BASE_CD = APP_TP) AS APP_TP_NAME,
    OS_TP, (SELECT TITLE FROM TB_BASE_BCODE WHERE BASE_CD = OS_TP) AS OS_TP_NAME,
    PROJECT_NAME, PACKAGE_NAME, APP_INFO, UPDATE_INFO,
    VERSION, VERSION_CODE, IS_STRICT_UPDATE, USE_YN,
    CREATED, UPDATED
  </sql>
  
  <sql id="getAppVersionList_Where">
    <if test="useYn != null">
      AND USE_YN = #{useYn,jdbcType=BIT}
    </if>
  </sql>
  
  <sql id="getAppVersionList_Where_Search">
    <if test="content != null and content != ''">
      AND APP_INFO LIKE CONCAT('%', #{content}, '%')
    </if>
    <if test="appType != null and appType != ''">
      AND APP_TP = #{appType}
    </if>
    <if test="osType != null and osType != ''">
      AND OS_TP = #{osType}
    </if>
  </sql>
  
  <select id="getAppVersionList" parameterType="hashMap" resultMap="AppVersionListResultMap">
    SELECT
      <include refid="AppVersion_Column_List" />
    FROM TB_SVC_APP
    WHERE 1=1
      <include refid="getAppVersionList_Where" />
      <include refid="getAppVersionList_Where_Search" />
    <if test="orderByClause != null">
      ORDER BY ${orderByClause}
    </if>
  </select>
  
  <select id="getCountAppVersionList" parameterType="hashMap" resultType="int">
    SELECT
      COUNT(*) AS COUNT
    FROM TB_SVC_APP
    WHERE 1=1
      <include refid="getAppVersionList_Where" />
      <include refid="getAppVersionList_Where_Search" />
  </select>
  
  <select id="getCountAppVersionListTotal" parameterType="hashMap" resultType="int">
    SELECT
      COUNT(*) AS COUNT
    FROM TB_SVC_APP
    WHERE 1=1
      <include refid="getAppVersionList_Where" />
  </select>
  
  <resultMap id="MenuListResultMap" type="com.jc.pico.utils.bean.UserBackofficeMenuList">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <id column="MENU_CD" jdbcType="CHAR" property="menuCd" />
    <result column="UP_CD" jdbcType="CHAR" property="upCd" />
    <result column="SUB_CD" jdbcType="CHAR" property="subCd" />
    <result column="URL" jdbcType="VARCHAR" property="url" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="TITLE_CODE" jdbcType="VARCHAR" property="titleCode" />
    <result column="APP_YN" jdbcType="BIT" property="appYn" />
    <result column="USE_YN" jdbcType="BIT" property="useYn" />
    <result column="DSC" jdbcType="VARCHAR" property="dsc" />
    <result column="CID" jdbcType="INTEGER" property="cid" />
    <result column="CDT" jdbcType="TIMESTAMP" property="cdt" />
    <result column="MID" jdbcType="INTEGER" property="mid" />
    <result column="MDT" jdbcType="TIMESTAMP" property="mdt" />
    <result column="CREATED" jdbcType="TIMESTAMP" property="created" />
    <result column="UPDATED" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>
  
  <sql id="MenuList_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="MenuList_Column_List">
    ID, MENU_CD, UP_CD, SUB_CD, URL, TITLE, TITLE_CODE, APP_YN, USE_YN, DSC, CID, CDT, MID, MDT, 
    CREATED, UPDATED
  </sql>
  
  <select id="selectMenuList" parameterType="com.jc.pico.bean.UserBackofficeMenuExample" resultMap="MenuListResultMap">
    SELECT
    <if test="distinct">
      distinct
    </if>
    <include refid="MenuList_Column_List" />
    FROM TB_USER_BACKOFFICE_MENU
    <if test="_parameter != null">
      <include refid="MenuList_Where_Clause" />
    </if>
    ORDER BY UP_CD ASC, SUB_CD ASC
  </select>

<select id="selectAllMenuList" parameterType="com.jc.pico.bean.UserBackofficeMenuExample" resultMap="MenuListResultMap">
    SELECT b.ID, 
           b.MENU_CD, 
           b.UP_CD, 
           b.SUB_CD, 
           b.URL, 
           b.TITLE, 
           b.TITLE_CODE, 
           b.APP_YN, 
           b.USE_YN, 
           b.DSC, 
           b.CID, 
           b.CDT, 
           b.MID, 
           b.MDT, 
           b.CREATED, 
           b.UPDATED
      FROM TB_USER_BACKOFFICE_MENU B
    ORDER BY UP_CD ASC, SUB_CD ASC
  </select>
  
 <select id="selectMenuList2-temp" parameterType="com.jc.pico.bean.UserBackofficeMenuExample" resultMap="MenuListResultMap">
    SELECT B.ID, 
           B.MENU_CD, 
           B.UP_CD, 
           B.SUB_CD, 
           B.URL, 
           B.TITLE, 
           B.TITLE_CODE, 
           B.APP_YN, 
           B.USE_YN, 
           B.DSC, 
           B.CID, 
           B.CDT, 
           B.MID, 
           B.MDT, 
           B.CREATED, 
           B.UPDATED
      FROM TB_USER_PERMITION A
           LEFT JOIN TB_USER_BACKOFFICE_MENU b ON (a.MENU_ID = b.ID)
     WHERE a.ALL_YN = 1
       AND a.USER_ID = #{userId}
    ORDER BY UP_CD ASC, SUB_CD ASC
  </select>
  
 <select id="selectMenuList2" parameterType="com.jc.pico.bean.UserBackofficeMenuExample" resultMap="MenuListResultMap">
    SELECT B.ID, 
           B.MENU_CD, 
           B.UP_CD, 
           B.SUB_CD, 
           B.URL, 
           B.TITLE, 
           B.TITLE_CODE, 
           B.APP_YN, 
           B.USE_YN, 
           B.DSC, 
           B.CID, 
           B.CDT, 
           B.MID, 
           B.MDT, 
           B.CREATED, 
           B.UPDATED
      FROM tb_user_group_auth A
           LEFT JOIN TB_USER_BACKOFFICE_MENU b ON (a.MENU_ID = b.ID)
     WHERE a.ALL_YN = 1
       AND a.group_id = IFNULL((SELECT user_role FROM TB_USER WHERE ID=#{userId}), '4')
    ORDER BY UP_CD ASC, SUB_CD ASC
  </select>  
  
  <resultMap id="BaseResultMap" type="java.util.LinkedHashMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 19 11:40:46 KST 2016.
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="PLATFORM_ID" jdbcType="BIGINT" property="platformId" />
    <result column="TYPE" jdbcType="CHAR" property="type" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="GRP_CD" jdbcType="CHAR" property="grpCd" />
    <result column="MEM_CD" jdbcType="INTEGER" property="memCd" />
    <result column="USER_ROLE" jdbcType="VARCHAR" property="userRole" />
    <result column="ADM_USE" jdbcType="TINYINT" property="admUse" />
    <result column="BARCODE" jdbcType="CHAR" property="barcode" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="PASSWORD" jdbcType="CHAR" property="password" typeHandler="com.jc.pico.utils.mybatis.typehandler.PasswordSecurityTypeHandler" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="FIRST_NAME" jdbcType="VARCHAR" property="firstName" />
    <result column="MID_NAME" jdbcType="VARCHAR" property="midName" />
    <result column="LAST_NAME" jdbcType="VARCHAR" property="lastName" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email"  typeHandler="com.jc.pico.utils.AES256Cipher"/>
    <result column="MB_COUNTRY_CD" jdbcType="VARCHAR" property="mbCountryCd" />
    
    <result column="MB" jdbcType="VARCHAR" property="mb"/>
    <result column="MB_BK" jdbcType="VARCHAR" property="mbBk" />

    <result column="TEL_COUNTRY_CD" jdbcType="VARCHAR" property="telCountryCd" />
    <result column="TEL" jdbcType="VARCHAR" property="tel" />
    <result column="FAX_COUNTRY_CD" jdbcType="VARCHAR" property="faxCountryCd" />
    <result column="FAX" jdbcType="VARCHAR" property="fax" />
    <result column="GENDER" jdbcType="CHAR" property="gender" />
    <result column="BIRTHDAY" jdbcType="CHAR" property="birthday" />
    <result column="COUNTRY" jdbcType="CHAR" property="country" />
    <result column="REGION" jdbcType="VARCHAR" property="region" />
    <result column="CITY" jdbcType="VARCHAR" property="city" />
    <result column="ADDR1" jdbcType="VARCHAR" property="addr1" />
    <result column="ADDR2" jdbcType="VARCHAR" property="addr2" />
    <result column="ZIP" jdbcType="VARCHAR" property="zip" />
    <result column="LAST_LOGIN" jdbcType="TIMESTAMP" property="lastLogin" />
    <result column="LOGIN_TRY_TM" jdbcType="TIMESTAMP" property="loginTryTm" />
    <result column="LOGIN_FAIL_CNT" jdbcType="TINYINT" property="loginFailCnt" />
    <result column="IS_MB_AUTH" jdbcType="BIT" property="isMbAuth" />
    <result column="MB_AUTH_TM" jdbcType="TIMESTAMP" property="mbAuthTm" />
    <result column="IS_EMAIL_AUTH" jdbcType="BIT" property="isEmailAuth" />
    <result column="EMAIL_AUTH_TM" jdbcType="TIMESTAMP" property="emailAuthTm" />
    <result column="IS_SVC_SMS" jdbcType="BIT" property="isSvcSms" />
    <result column="IS_SVC_PUSH" jdbcType="BIT" property="isSvcPush" />
    <result column="IS_SVC_BLUETOOTH" jdbcType="BIT" property="isSvcBluetooth" />
    <result column="LAST_BEACON_PUSH" jdbcType="TIMESTAMP" property="lastBeaconPush" />
    <result column="SEC_TOKEN" jdbcType="VARCHAR" property="secToken" />
    <result column="CREATED" jdbcType="TIMESTAMP" property="created" />
    <result column="UPDATED" jdbcType="TIMESTAMP" property="updated" />
    <result column="FRAN_ID" jdbcType="BIGINT" property="franId" />
    <result column="BRAND_ID" jdbcType="BIGINT" property="brandId" />
    <result column="STORE_ID" jdbcType="BIGINT" property="storeId" />
  </resultMap>
  
  <select id="getUserInfo" parameterType="hashMap" resultMap="BaseResultMap">
	SELECT A.ID,
	       A.PLATFORM_ID,
	       A.`TYPE`,
	       A.`STATUS`,
	       A.GRP_CD,
	       A.MEM_CD,
	       A.USER_ROLE,
	       A.ADM_USE,
	       A.BARCODE,
	       A.USERNAME,
	       A.`PASSWORD`,
	       A.`NAME`,
	       A.FIRST_NAME,
	       A.MID_NAME,
	       A.LAST_NAME,
	       A.EMAIL,
	       A.MB_COUNTRY_CD,
	       A.MB,
	       A.MB_BK,
	       A.TEL_COUNTRY_CD,
	       A.TEL,
	       A.FAX_COUNTRY_CD,
	       A.FAX,
	       A.GENDER,
	       A.BIRTHDAY,
	       A.COUNTRY,
	       A.REGION,
	       A.CITY, 
	       A.ADDR1,
	       A.ADDR2,
	       A.ZIP,
	       A.LAST_LOGIN,
	       A.LOGIN_TRY_TM,
	       A.LOGIN_FAIL_CNT,
	       A.IS_MB_AUTH,
	       A.MB_AUTH_TM,
	       A.IS_EMAIL_AUTH,
	       A.EMAIL_AUTH_TM,
	       A.IS_SVC_SMS,
	       A.IS_SVC_PUSH,
	       A.IS_SVC_BLUETOOTH,
	       A.LAST_BEACON_PUSH,
	       A.SEC_TOKEN,
	       A.CREATED,
	       A.UPDATED
	     , B.FRAN_ID
         , B.BRAND_ID
         , B.STORE_ID
	  FROM TB_USER A
	       LEFT JOIN TB_SVC_USER_MAPPING B ON (A.ID = B.USER_ID)
	 WHERE 1=1
	   <if test="id != null and id !=''">
			AND A.ID = #{id}
	   </if>
  </select>
  
  <select id="getUserList" parameterType="hashMap" resultMap="BaseResultMap">
	SELECT A.ID, 
	       A.PLATFORM_ID, 
	       (SELECT TITLE FROM TB_BASE_BCODE WHERE BASE_CD = A.`TYPE`) AS TYPE, 
	       (SELECT TITLE FROM TB_BASE_BCODE WHERE BASE_CD = A.`STATUS`) AS STATUS, 
	       A.GRP_CD, 
	       A.MEM_CD, 
	       A.USER_ROLE, 
	       A.ADM_USE, 
	       A.BARCODE, 
	       A.USERNAME, 
	       A.`PASSWORD`, 
	       A.`NAME`, 
	       A.FIRST_NAME, 
	       A.MID_NAME, 
	       A.LAST_NAME, 
	       A.EMAIL, 
	       A.MB_COUNTRY_CD, 
	       A.MB, 
	       A.MB_BK,
	       A.TEL_COUNTRY_CD, 
	       A.TEL,
	       A.FAX_COUNTRY_CD,
	       A.FAX,
	       A.GENDER,
	       A.BIRTHDAY,
	       A.COUNTRY,
	       A.REGION,
	       A.CITY, 
	       A.ADDR1,
	       A.ADDR2,
	       A.ZIP,
	       A.LAST_LOGIN,
	       A.LOGIN_TRY_TM,
	       A.LOGIN_FAIL_CNT,
	       A.IS_MB_AUTH,
	       A.MB_AUTH_TM,
	       A.IS_EMAIL_AUTH,
	       A.EMAIL_AUTH_TM,
	       A.IS_SVC_SMS,
	       A.IS_SVC_PUSH,
	       A.IS_SVC_BLUETOOTH,
	       A.LAST_BEACON_PUSH,
	       A.SEC_TOKEN,
	       A.CREATED,
	       A.UPDATED
	     , B.FRAN_ID
         , B.BRAND_ID
         , B.STORE_ID
	  FROM TB_USER A
	       LEFT JOIN TB_SVC_USER_MAPPING B ON (A.ID = B.USER_ID)
	 WHERE 1=1
	   <if test="memberType == 'system'" >
	   	AND A.TYPE IN ('300003','300004','300005','300006')
	   </if>
	   <if test="memberType == 'store'" >
	   	AND A.TYPE IN ('300004','300006')
	   </if>
	   <if test="userType != null and userType !=''">
			AND A.TYPE = #{type}
	   </if>
	   <if test="franId != null and franId !=''">
	   		AND B.FRAN_ID = #{franId}
	   </if>
	   <if test="brandId != null and brandId !=''">
	   		AND B.BRAND_ID = #{brandId}
	   </if>
	   <if test="storeId != null and storeId != ''">
	   		AND B.STORE_ID = #{storeId}
	   </if> 
	   <if test="searchString != null">
	   		AND A.NAME LIKE CONCAT('%', #{searchString}, '%')
	   </if>	   
	<if test="orderby != null">
		ORDER BY ${orderby}
	</if>
  </select>
  
  <select id="getCountUserList" parameterType="hashMap" resultType="int">
	SELECT COUNT(*)
	  FROM TB_USER A
	       LEFT JOIN TB_SVC_USER_MAPPING B ON (A.ID = B.USER_ID)
	 WHERE 1=1
	   <if test="memberType == 'system'" >
	   	AND A.TYPE IN ('300003','300004','300005','300006')
	   </if>
	   <if test="memberType == 'store'" >
	   	AND A.TYPE IN ('300004','300006')
	   </if>
	   <if test="userType != null">
			AND A.TYPE = #{type}
	   </if>
	   <if test="franId != null and franId !=''">
	   		AND B.FRAN_ID = #{franId}
	   </if>
	   <if test="brandId != null and brandId !=''">
	   		AND B.BRAND_ID = #{brandId}
	   </if>
	   <if test="storeId != null and storeId != ''">
	   		AND B.STORE_ID = #{storeId}
	   </if>
	   <if test="search != null">
	   		AND B.STORE_ID = #{search}
	   </if>
	   <if test="searchString != null">
	   		AND A.NAME LIKE CONCAT('%', #{searchString}, '%')
	   </if>
  </select>
  
  <select id="getTotalCountUserList" parameterType="hashMap" resultType="int">
	SELECT COUNT(*)
	  FROM TB_USER A
	       LEFT JOIN TB_SVC_USER_MAPPING B ON (A.ID = B.USER_ID)
	 WHERE 1=1
	   <if test="memberType == 'system'" >
	   	AND A.TYPE IN ('300003','300004','300005','300006')
	   </if>
	   <if test="memberType == 'store'" >
	   	AND A.TYPE IN ('300004','300006')
	   </if>
	   <if test="userType != null">
			AND A.TYPE = #{type}
	   </if>
	   <if test="franId != null and franId !=''">
	   		AND B.FRAN_ID = #{franId}
	   </if>
	   <if test="brandId != null and brandId !=''">
	   		AND B.BRAND_ID = #{brandId}
	   </if>
	   <if test="storeId != null and storeId != ''">
	   		AND B.STORE_ID = #{storeId}
	   </if>
  </select>
  
  <resultMap id="PROCEDUREResultMap" type="com.jc.pico.utils.bean.UserGroupAuthProcedure">
    <id column="GA_ID" property="id" jdbcType="BIGINT" />
    <result column="MENU_ID" property="menuId" jdbcType="BIGINT" />
    <result column="GROUP_ID" property="groupId" jdbcType="BIGINT" />
    <result column="MENU_CD" property="menuCd" jdbcType="CHAR" />
    <result column="GROUP_CD" property="groupCd" jdbcType="CHAR" />
    <result column="UP_CD" property="upCd" jdbcType="CHAR" />
    <result column="TITLE" property="title" jdbcType="CHAR" />
    <result column="ALL_YN" property="allYn" jdbcType="BIT" />
    <result column="READ_YN" property="readYn" jdbcType="BIT" />
    <result column="ADD_YN" property="addYn" jdbcType="BIT" />
    <result column="MOD_YN" property="modYn" jdbcType="BIT" />
    <result column="DEL_YN" property="delYn" jdbcType="BIT" />
    <result column="PRT_YN" property="prtYn" jdbcType="BIT" />
    <result column="HID_YN" property="hidYn" jdbcType="BIT" />
  </resultMap>
  
  <select id="selectByProcedureUserGroupAuthList" parameterType="com.jc.pico.bean.UserGroupAuth" resultMap="PROCEDUREResultMap">
  	call GROUP_MENU_AUTH(#{record.groupId})
  </select>
  
  <resultMap id="UserPermitionResultMap" type="com.jc.pico.utils.bean.UserGroupAuthProcedure">
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="MENU_ID" property="menuId" jdbcType="BIGINT" />
    <result column="GROUP_ID" property="groupId" jdbcType="BIGINT" />
    <result column="MENU_CD" property="menuCd" jdbcType="CHAR" />
    <result column="GROUP_CD" property="groupCd" jdbcType="CHAR" />
    <result column="UP_CD" property="upCd" jdbcType="CHAR" />
    <result column="TITLE" property="title" jdbcType="CHAR" />
    <result column="ALL_YN" property="allYn" jdbcType="BIT" />
    <result column="READ_YN" property="readYn" jdbcType="BIT" />
    <result column="ADD_YN" property="addYn" jdbcType="BIT" />
    <result column="MOD_YN" property="modYn" jdbcType="BIT" />
    <result column="DEL_YN" property="delYn" jdbcType="BIT" />
   
  </resultMap>
  <select id="selectByProcedureUserPermitionList" parameterType="map" resultMap="UserPermitionResultMap">
  	SELECT M.ID AS MENU_ID,
	       M.MENU_CD AS MENU_CD,
	       M.UP_CD,
	       M.TITLE AS TITLE,
	       P.USER_ID,
	       CASE WHEN P.GROUP_ID IS NULL 
                THEN (SELECT B.ID 
                        FROM TB_USER A, 
                             TB_USER_GROUP B
                       WHERE A.ID = #{record.userId}
                         AND B.id = A.USER_ROLE)
                ELSE P.GROUP_ID
                END AS GROUP_ID,
           CASE WHEN P.GROUP_ID IS NULL 
                THEN (SELECT b.GROUP_CD 
                        FROM TB_USER A, 
                             TB_USER_GROUP B
                        WHERE A.ID = #{record.userId}
                          AND B.id = a.USER_ROLE)
                ELSE p.GROUP_CD
                END AS GROUP_CD,
	       P.ID AS ID,
	       P.ALL_YN,	       
	       P.READ_YN,
	       P.ADD_YN,
	       P.MOD_YN,
	       P.DEL_YN
	  FROM TB_USER_BACKOFFICE_MENU M
	       LEFT JOIN TB_USER_PERMITION P
	          ON M.ID = P.MENU_ID AND P.USER_ID = #{record.userId}
	WHERE M.USE_YN = '1'
		<if test="whereMenuYn == 'system'">
		AND M.ADMIN_MENU_YN = '1'
		</if>
		<if test="whereMenuYn == 'store'">
		AND M.STORE_MENU_YN = '1'
		</if>
	ORDER BY UP_CD ASC, SUB_CD ASC
  </select>
          
  <select id="getCountUserPermitionList" parameterType="java.lang.Long" resultType="int">
	select count(*)
	  from tb_user_permition a
	 where a.USER_ID = #{userId,jdbcType=BIGINT}
  </select>
  
  <select id="selectUserPermitionList" parameterType="com.jc.pico.bean.UserPermition" resultMap="UserPermitionResultMap">
  	SELECT M.ID AS MENU_ID,
			M.MENU_CD AS MENU_CD,
			M.UP_CD,
			M.TITLE AS TITLE,
			GA.USER_ID,
      		GA.GROUP_ID,
      		GA.GROUP_CD,
			GA.ID,
			GA.ALL_YN,
			GA.READ_YN,
	        GA.ADD_YN,
	        GA.MOD_YN,
	        GA.DEL_YN
	  FROM  TB_USER_BACKOFFICE_MENU M
	        LEFT JOIN TB_USER_PERMITION GA ON M.ID = GA.MENU_ID AND GA.USER_ID = #{userId}
     WHERE M.USE_YN = '1'
	 ORDER BY UP_CD ASC, SUB_CD ASC
  </select>
  
  <update id="updateUserMapping" parameterType="map">
    update tb_svc_user_mapping
    SET FRAN_ID = #{record.franId,jdbcType=BIGINT},
    	BRAND_ID = #{record.brandId,jdbcType=BIGINT},
    	STORE_ID = #{record.storeId,jdbcType=BIGINT}
    WHERE USER_ID = #{record.userId,jdbcType=BIGINT}
  </update>
  
  <resultMap type="java.util.LinkedHashMap" id="CustomerList" autoMapping="false">
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="BARCODE" property="barcode" jdbcType="CHAR" />
    <result column="MB" property="mb" jdbcType="CHAR"/>
    <result column="MB_COUNTRY_CD" property="mbCountryCd" jdbcType="CHAR"/>
    <result column="NAME" property="name" jdbcType="CHAR" />
    <result column="BIRTHDAY" property="birthday" jdbcType="CHAR" />
    <result column="GENDER" property="gender" jdbcType="CHAR" />
    <result column="EMAIL" property="email" jdbcType="CHAR" typeHandler="com.jc.pico.utils.AES256Cipher"/>
    <result column="LAST_LOGIN" jdbcType="TIMESTAMP" property="lastLogin" />
    <result column="CREATED" jdbcType="TIMESTAMP" property="created" />
    <result column="BRAND_ID" jdbcType="BIGINT" property="brandId"/>
    <result column="STORE_ID" jdbcType="BIGINT" property="storeId"/>
    <result column="LEVEL" property="level" jdbcType="CHAR" />
    <result column="TOTAL_SALES_AMOUNT" jdbcType="DOUBLE" property="totalSalesAmount" />
    <result column="TOTAL_SALES_COUNT" jdbcType="BIGINT" property="totalSalesCount" />
  </resultMap>
  
  <select id="getCustomerList" parameterType="hashMap" resultMap="CustomerList">
    SELECT 
       U.ID
      ,U.BARCODE
      ,U.MB
      ,U.MB_COUNTRY_CD
      ,U.`NAME`
      ,DATE_FORMAT(U.BIRTHDAY,'%Y-%m-%d') BIRTHDAY
      ,B.TITLE as GENDER
      ,U.EMAIL
      ,U.LAST_LOGIN
      ,U.IS_SVC_SMS
      ,U.IS_SVC_PUSH
      ,U.IS_SVC_BLUETOOTH
      ,U.CREATED
		 , S.BRAND_ID
		 , S.STORE_ID
		 , S.LEVEL
		 , S.TOTAL_SALES_AMOUNT
		 , S.TOTAL_SALES_COUNT
      FROM TB_USER U
           LEFT OUTER JOIN TB_SVC_STORE_USER S ON U.ID = S.USER_ID
           LEFT OUTER JOIN TB_BASE_BCODE B ON (U.GENDER = B.BASE_CD)
     WHERE 1 = 1
     <if test="brandId != null">
       AND S.BRAND_ID IN ( SELECT ID
                             FROM TB_SVC_BRAND
                            WHERE 1 = 1
                            <if test="franId != null">
                              AND FRAN_ID = ${franId}
                            </if>
                              AND BRAND_ID = ${brandId}
                          )
    </if>
    <if test="storeId != null">
      AND S.STORE_ID = ${storeId}
    </if>
    <if test="userId != null">
       AND U.ID = ${userId}
    </if>
    <if test="searchType2 == 'birthday'">
    	<if test="fromdate != null and todate != null">
    		AND u.BIRTHDAY BETWEEN DATE_ADD(#{fromdate}, INTERVAL 0 SECOND) AND DATE_ADD(#{todate}, INTERVAL '23:59:59' HOUR_SECOND)
    	</if>
    </if>
    
    <if test="searchType2 == 'joinDay'">
      <if test="fromdate != null and todate != null">
        AND u.CREATED BETWEEN DATE_ADD(#{fromdate}, INTERVAL 0 SECOND) AND DATE_ADD(#{todate}, INTERVAL '23:59:59' HOUR_SECOND)
      </if>
    </if>
      
        <if test="searchType == 'usercode'">
      <if test="searchKeyword != null">
        AND U.BARCODE LIKE CONCAT('%', #{searchKeyword}, '%')
      </if>
    </if>
    <if test="searchType == 'username'">
      <if test="searchKeyword != null">
        AND U.NAME LIKE CONCAT('%', #{searchKeyword}, '%')
      </if>
    </if>
    <if test="searchType == 'usermb'">
      <if test="searchKeyword != null">
        AND (    MB_BK = #{searchKeyword, typeHandler=com.jc.pico.utils.mybatis.typehandler.MobileSecurityTypeHandler} 
              OR MB = #{searchKeyword, typeHandler=com.jc.pico.utils.mybatis.typehandler.MobileSecurityTypeHandler}
            )
      </if>
    </if>
    <if test="searchType == 'useremail'">
      <if test="searchKeyword != null">
        AND U.EMAIL = #{searchKeyword}
      </if>
    </if>
      
    <if test="start != null and length != null">
	  LIMIT ${start}, ${length}
    </if>
  </select>
  
  <select id="getCountCustomerList" parameterType="hashMap" resultType="int">
      SELECT COUNT(*)
      FROM TB_USER U
           LEFT OUTER JOIN TB_SVC_STORE_USER S ON U.ID = S.USER_ID
     WHERE 1 = 1
     <if test="brandId != null">
       AND S.BRAND_ID IN ( SELECT ID
                             FROM TB_SVC_BRAND
                            WHERE 1 = 1
                            <if test="franId != null">
                              AND FRAN_ID = ${franId}
                            </if>
                              AND BRAND_ID = ${brandId}
                          )
    </if>
    <if test="storeId != null">
      AND S.STORE_ID = ${storeId}
    </if>
    <if test="userId != null">
       AND U.ID = ${userId}
    </if>
    <if test="searchType2 == 'birthday'">
      <if test="fromdate != null and todate != null">
        AND u.BIRTHDAY BETWEEN DATE_ADD(#{fromdate}, INTERVAL 0 SECOND) AND DATE_ADD(#{todate}, INTERVAL '23:59:59' HOUR_SECOND)
      </if>
    </if>
    
    <if test="searchType2 == 'joinDay'">
      <if test="fromdate != null and todate != null">
        AND u.CREATED BETWEEN DATE_ADD(#{fromdate}, INTERVAL 0 SECOND) AND DATE_ADD(#{todate}, INTERVAL '23:59:59' HOUR_SECOND)
      </if>
    </if>
      
        <if test="searchType == 'usercode'">
      <if test="searchKeyword != null">
        AND U.BARCODE LIKE CONCAT('%', #{searchKeyword}, '%')
      </if>
    </if>
    <if test="searchType == 'username'">
      <if test="searchKeyword != null">
        AND U.NAME LIKE CONCAT('%', #{searchKeyword}, '%')
      </if>
    </if>
    <if test="searchType == 'usermb'">
      <if test="searchKeyword != null">
        AND (    MB_BK = #{searchKeyword, typeHandler=com.jc.pico.utils.mybatis.typehandler.MobileSecurityTypeHandler} 
              OR MB = #{searchKeyword, typeHandler=com.jc.pico.utils.mybatis.typehandler.MobileSecurityTypeHandler}
            )
      </if>
    </if>
    <if test="searchType == 'useremail'">
      <if test="searchKeyword != null">
        AND U.EMAIL = #{searchKeyword}
      </if>
    </if>
      
    <if test="start != null and length != null">
    LIMIT ${start}, ${length}
    </if>
  </select>
</mapper>
